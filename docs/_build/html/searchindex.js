Search.setIndex({"docnames": ["ajmc", "ajmc.commons", "ajmc.corpora", "ajmc.nlp", "ajmc.nlp.token_classification", "ajmc.nlp.token_classification.data_preparation", "ajmc.ocr", "ajmc.ocr.preprocessing", "ajmc.ocr.pytorch", "ajmc.ocr.tesseract", "ajmc.olr", "ajmc.olr.layoutlm", "ajmc.olr.yolo", "ajmc.text_processing", "index", "modules", "other_pages/base_functionalities", "other_pages/commentary_importation_pipeline", "other_pages/contributing_guidelines", "other_pages/data_organisation", "other_pages/introduction_to_code"], "filenames": ["ajmc.rst", "ajmc.commons.rst", "ajmc.corpora.rst", "ajmc.nlp.rst", "ajmc.nlp.token_classification.rst", "ajmc.nlp.token_classification.data_preparation.rst", "ajmc.ocr.rst", "ajmc.ocr.preprocessing.rst", "ajmc.ocr.pytorch.rst", "ajmc.ocr.tesseract.rst", "ajmc.olr.rst", "ajmc.olr.layoutlm.rst", "ajmc.olr.yolo.rst", "ajmc.text_processing.rst", "index.rst", "modules.rst", "other_pages/base_functionalities.ipynb", "other_pages/commentary_importation_pipeline.ipynb", "other_pages/contributing_guidelines.md", "other_pages/data_organisation.ipynb", "other_pages/introduction_to_code.ipynb"], "titles": ["ajmc package", "ajmc.commons package", "ajmc.corpora package", "ajmc.nlp package", "ajmc.nlp.token_classification package", "ajmc.nlp.token_classification.data_preparation package", "ajmc.ocr package", "ajmc.ocr.preprocessing package", "ajmc.ocr.pytorch package", "ajmc.ocr.tesseract package", "ajmc.olr package", "ajmc.olr.layoutlm package", "ajmc.olr.yolo package", "ajmc.text_processing package", "Welcome to ajmc\u2019s documentation!", "ajmc", "Basic functionalities", "Commentary importation pipeline", "Contributing guidelines", "Understanding the ajmc directory structure.", "Understanding the goal of the library"], "terms": {"common": [0, 6, 13, 14, 15, 16, 17, 18, 19], "arithmet": [0, 15], "are_intervals_within_interv": [0, 1, 15], "compute_interval_overlap": [0, 1, 15], "is_interval_within_interv": [0, 1, 15], "safe_divid": [0, 1, 15], "docstr": [0, 15, 18], "docstring_formatt": [0, 1, 15, 18], "file_manag": [0, 15], "check_ocr_gt_spreadsheet_conform": [0, 1, 15], "check_via_spreadsheet_conform": [0, 1, 15], "clean_all_ocr_runs_outputs_dir": [0, 1, 15], "data_sanity_check": [0, 1, 15], "find_replace_in_all_comm_dir": [0, 1, 15], "get_62_based_datecod": [0, 1, 13, 15], "get_metadata_spreadsheet": [0, 1, 15], "get_ocr_gt_spreadsheet": [0, 1, 15], "get_olr_gt_spreadsheet": [0, 1, 15], "int_to_x_based_cod": [0, 1, 15], "move_files_in_each_commentary_dir": [0, 1, 15], "read_google_sheet": [0, 1, 15], "walk_dir": [0, 1, 15], "walk_fil": [0, 1, 15], "geometri": [0, 15, 20], "shape": [0, 1, 4, 7, 8, 13, 15, 20], "area": [0, 1, 18], "bbox": [0, 1, 10, 11, 13, 16, 20], "center": [0, 1], "from_center_w_h": [0, 1], "from_numpy_arrai": [0, 1], "from_xywh": [0, 1], "height": [0, 1, 6, 7, 8, 10, 13, 17, 18], "width": [0, 1, 6, 8, 13, 17, 18], "xywh": [0, 1], "xyxi": [0, 1], "adjust_bbox_to_included_contour": [0, 1, 15], "are_bboxes_overlap": [0, 1, 15], "are_bboxes_overlapping_with_threshold": [0, 1, 15], "compute_bbox_area": [0, 1, 15], "compute_bbox_overlap_area": [0, 1, 15], "get_bbox_from_point": [0, 1, 15], "is_bbox_within_bbox": [0, 1, 15], "is_bbox_within_bbox_with_threshold": [0, 1, 15], "is_point_within_bbox": [0, 1, 15], "imag": [0, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20], "ajmcimag": [0, 1, 13, 15, 17, 18, 20], "contour": [0, 1, 10, 17], "crop": [0, 1, 8, 20], "matrix": [0, 1, 8, 18], "show": [0, 1, 8], "write": [0, 1, 4, 5, 6, 7, 9, 10, 13, 18], "align_rgb_valu": [0, 1, 15], "binar": [0, 1, 15, 20], "draw_box": [0, 1, 15], "draw_contour": [0, 1, 15], "draw_reading_ord": [0, 1, 15, 17], "draw_textcontain": [0, 1, 13, 15], "find_contour": [0, 1, 15], "remove_artifacts_from_contour": [0, 1, 15], "resize_imag": [0, 1, 15], "rgb_to_bgr": [0, 1, 15], "miscellan": [0, 15, 18], "aligned_print": [0, 1, 15], "get_custom_logg": [0, 1, 15], "get_import": [0, 1, 15], "get_unique_el": [0, 1, 15], "log_to_fil": [0, 1, 15], "prefix_command_with_conda_env": [0, 1, 15], "recursive_iter": [0, 1, 15], "split_list": [0, 1, 15], "timer": [0, 1, 15, 18], "validate_json_schema": [0, 1, 15], "unicode_util": [0, 15], "chunk_string_by_charset": [0, 1, 15], "count_chars_by_charset": [0, 1, 15], "count_chars_by_charset_nfd": [0, 1, 15], "get_all_chars_from_rang": [0, 1, 15], "get_char_charset": [0, 1, 15], "get_char_unicode_nam": [0, 1, 15], "harmonise_ligatur": [0, 1, 15], "harmonise_miscellaneous_symbol": [0, 1, 15], "harmonise_non_print": [0, 1, 15], "harmonise_punctu": [0, 1, 15], "harmonise_spac": [0, 1, 15], "harmonise_unicod": [0, 1, 15], "is_charset_str": [0, 1, 15], "is_charset_string_nfd": [0, 1, 15], "variabl": [0, 13, 15, 16, 17, 18, 19], "get_comm_base_dir": [0, 1, 15], "get_comm_canonical_default_path": [0, 1, 15], "get_comm_canonical_dir": [0, 1, 15], "get_comm_canonical_path_from_pattern": [0, 1, 15], "get_comm_img_dir": [0, 1, 15, 17, 19], "get_comm_lemlink_jsons_dir": [0, 1, 15], "get_comm_lemlink_xmis_dir": [0, 1, 15], "get_comm_ner_jsons_dir": [0, 1, 15], "get_comm_ner_xmis_dir": [0, 1, 15], "get_comm_ocr_gt_dir": [0, 1, 15], "get_comm_ocr_gt_pairs_dir": [0, 1, 15], "get_comm_ocr_outputs_dir": [0, 1, 15, 17], "get_comm_ocr_runs_dir": [0, 1, 15], "get_comm_sections_path": [0, 1, 15, 19], "get_comm_via_path": [0, 1, 15, 17], "corpora": [0, 14, 15], "bibliographic_record": [0, 15], "dublincorerecord": [0, 2, 15], "creator": [0, 2], "descript": [0, 2], "get_property_tag_text": [0, 2], "keyword": [0, 2], "keywords_str": [0, 2], "languag": [0, 2, 9, 20], "publish": [0, 2], "titl": [0, 2, 13], "whole_text": [0, 2], "get_records_list": [0, 2, 15], "cleaning_util": [0, 15], "basic_clean": [0, 2, 15], "find_recurrent_lin": [0, 2, 15], "harmonise_linebreak": [0, 2, 15], "corpora_class": [0, 15], "corpu": [0, 2, 13, 15], "auto_init": [0, 2], "data_dir": [0, 2, 8], "file": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 20], "get_chunk": [0, 2], "get_docu": [0, 2], "get_lin": [0, 2], "get_plain_text": [0, 2], "get_region": [0, 2], "get_word": [0, 2], "write_plain_text": [0, 2], "logeioncorpu": [0, 2, 15], "get_lexica": [0, 2], "oglcorpu": [0, 2, 15], "perseuslegacycorpu": [0, 2, 15], "convert_soup_to_unicod": [0, 2], "read_docu": [0, 2], "plaintextcorpu": [0, 2, 15], "teicorpu": [0, 2, 15], "scraping_util": [0, 15], "get_html": [0, 2, 15], "oai_files_to_datafram": [0, 2, 15], "scrape_pag": [0, 2, 15], "scrape_resumptiontoken_oai": [0, 2, 15], "nlp": [0, 14, 15, 20], "token_classif": [0, 3, 15], "data_prepar": [0, 3, 4, 6], "config": [0, 3, 5, 7, 9, 11, 15], "create_default_config": [0, 3, 4], "parse_config_from_json": [0, 3, 4], "evalu": [0, 3, 9, 15, 16, 18, 19], "evaluate_dataset": [0, 3, 4], "evaluate_hip": [0, 3, 4], "evaluate_iob_fil": [0, 3, 4], "seqeval_evalu": [0, 3, 4], "seqeval_to_df": [0, 3, 4], "model": [0, 3, 5, 6, 11, 19], "predict": [0, 3, 4, 5, 6, 8, 18], "predict_and_write_tsv": [0, 3, 4], "predict_batch": [0, 3, 4], "predict_dataset": [0, 3, 4], "pipelin": [0, 3, 6, 13, 14, 18, 20], "create_dir": [0, 3, 4], "main": [0, 3, 4, 6, 7, 8, 10, 11, 13, 15, 17, 18, 20], "set_se": [0, 3, 4], "train": [0, 3, 4, 6, 8, 9, 10], "ocr": [0, 1, 10, 13, 14, 15, 16, 20], "preprocess": [0, 6, 15], "data_augment": [0, 6], "erod": [0, 6, 7], "random_degrad": [0, 6, 7], "random_distort": [0, 6, 7], "write_augmented_lin": [0, 6, 7], "gather_and_transform_dataset": [0, 6, 7], "import_dataset_metadata": [0, 6, 7], "make_dataset": [0, 6, 7], "safe_check_dataset": [0, 6, 7], "sample_dataset_metadata": [0, 6, 7], "split_root_dataset_metadata": [0, 6, 7], "write_dataset_metadata": [0, 6, 7], "get_source_dataset": [0, 6], "basic_text_clean": [0, 6, 7], "clean_source_dataset": [0, 6, 7], "compute_dataset_metadata": [0, 6, 7], "controle_overwrit": [0, 6, 7], "make_clean_ajmc_dataset": [0, 6, 7], "make_clean_archiscribe_dataset": [0, 6, 7], "make_clean_gt4histocr_dataset": [0, 6, 7], "make_clean_pogretra_dataset": [0, 6, 7], "make_clean_porta_fontium_dataset": [0, 6, 7], "make_clean_source_dataset": [0, 6, 7], "make_clean_synthetic_dataset": [0, 6, 7], "regularize_dataset": [0, 6, 7], "pagify_dataset": [0, 6], "create_blank_imag": [0, 6, 7], "get_commentary_image_dimens": [0, 6, 7], "insert_lin": [0, 6, 7], "pytorch": [0, 6, 15], "get_config": [0, 6, 8], "ctc_decoder_torch": [0, 6], "beamctcdecod": [0, 6, 8], "decod": [0, 6, 8], "greedydecod": [0, 6, 8], "data_gener": [0, 6], "array2pil": [0, 6, 8], "check_file_count": [0, 6, 8], "create_sample_dir": [0, 6, 8], "degrade_lin": [0, 6, 8], "distort_lin": [0, 6, 8], "do_all_purpose_font": [0, 6, 8], "do_capit": [0, 6, 8], "do_gibberish": [0, 6, 8], "do_greek_font": [0, 6, 8], "do_latin_font": [0, 6, 8], "do_mixed_font": [0, 6, 8], "draw_textlin": [0, 6, 8], "get_textline_font_vari": [0, 6, 8], "get_textline_gener": [0, 6, 8], "inner_loop": [0, 6, 8], "pad_imag": [0, 6, 8], "pil2arrai": [0, 6, 8], "textline_gener": [0, 6, 8], "data_process": [0, 6], "ocrbatch": [0, 6, 8], "ocriterdataset": [0, 6, 8], "ocrlin": [0, 6, 8, 13, 15, 18, 20], "chunk_img_tensor": [0, 6, 8], "compute_n_chunk": [0, 6, 8], "compute_pad": [0, 6, 8], "crop_image_tensor_to_nonzero": [0, 6, 8], "get_custom_dataload": [0, 6, 8], "invert_image_tensor": [0, 6, 8], "normalize_image_tensor": [0, 6, 8], "prepare_img": [0, 6, 8], "recompose_batched_chunk": [0, 6, 8], "recompose_chunk": [0, 6, 8], "dataset": [0, 4, 5, 6, 7, 9], "ocrevaldataset": [0, 6, 8], "ocrtorchdataset": [0, 6, 8], "ocrtrainingdataset": [0, 6, 8], "densenetbackbon": [0, 6, 8], "ocrtorchmodel": [0, 6, 8], "train_parallel": [0, 6], "ocrmodeltrain": [0, 6, 8], "ddp_setup": [0, 6, 8], "tesseract": [0, 6, 15, 17], "dictionari": [0, 6, 8, 13], "change_traineddata_wordlist": [0, 6, 9], "create_traineddata_with_wordlist": [0, 6, 9], "get_mr_abbr_wordlist": [0, 6, 9], "get_or_create_wordlist_path": [0, 6, 9], "get_traineddata_wordlist": [0, 6, 9], "merge_wordlist": [0, 6, 9], "write_all_wordlist": [0, 6, 9], "write_combined_wordlist": [0, 6, 9], "write_mr_abbr_wordlist": [0, 6, 9], "write_unpacked_traineddata": [0, 6, 9], "experi": [0, 6, 18], "make_experi": [0, 6, 9], "make_experiment_dir": [0, 6, 9], "make_general_results_t": [0, 6, 9], "get_training_command": [0, 6, 9], "make_model": [0, 6, 9], "make_model_dir": [0, 6, 9], "run": [0, 1, 4, 6, 8, 9, 11, 13, 17, 18], "tesseract_util": [0, 6], "create_general_t": [0, 6, 9], "reformulate_output_dir": [0, 6, 9], "run_tess_command": [0, 6, 9], "config_to_tesstrain_config": [0, 6, 15], "get_all_config": [0, 6, 15], "get_config_read": [0, 6, 15], "row_to_dataset_config": [0, 6, 15], "row_to_experiment_config": [0, 6, 15], "row_to_model_config": [0, 6, 15], "bag_of_word_evalu": [0, 6, 15], "commentary_evalu": [0, 6, 15], "coord_based_page_evalu": [0, 6, 15], "count_errors_by_charset": [0, 6, 15], "directory_evalu": [0, 6, 15], "initialize_soup": [0, 6, 15], "insert_text_in_soup": [0, 6, 15], "line_based_evalu": [0, 6, 15], "record_editop": [0, 6, 15], "simple_coordinates_based_evalu": [0, 6, 15], "write_editops_record": [0, 6, 15], "write_error_count": [0, 6, 15], "font_util": [0, 8, 15], "font": [0, 6, 7, 8, 15], "font_vari": [0, 6, 8], "ft_collect": [0, 6], "ft_font": [0, 6], "get_font_variant_index": [0, 6], "get_font_variant_path": [0, 6], "get_missing_glyph": [0, 6], "has_charset_glyph": [0, 6], "has_glyph": [0, 6], "name": [0, 1, 4, 6, 7, 11, 13, 17, 18, 19], "pil_font": [0, 6], "set_siz": [0, 6], "walk_through_font_dir": [0, 6, 15], "util": [0, 1, 3, 4, 7, 8, 9, 11, 15, 18, 20], "get_kraken_command": [0, 6, 15], "guess_ocr_format": [0, 6, 15], "get_dataset_config_path": [0, 6, 15], "get_dataset_dir": [0, 6, 15], "get_dataset_metadata_path": [0, 6, 15], "get_experiment_config_path": [0, 6, 15], "get_experiment_dir": [0, 6, 15], "get_experiment_model_outputs_dir": [0, 6, 15], "get_experiment_models_dir": [0, 6, 15], "get_model_config_path": [0, 6, 15], "get_model_dir": [0, 6, 15], "get_model_train_dir": [0, 6, 15], "get_source_dataset_dir": [0, 6, 15], "get_traineddata_dir": [0, 6, 15], "get_traineddata_unpacked_dir": [0, 6, 15], "get_trainneddata_path": [0, 6, 15], "get_wordlist_path": [0, 6, 15], "olr": [0, 1, 6, 13, 14, 15, 19, 20], "layoutlm": [0, 10, 15], "draw": [0, 1, 8, 10, 13], "draw_capt": [0, 10, 11], "draw_page_label": [0, 10, 11], "align_predicted_pag": [0, 10, 11], "create_olr_config": [0, 10, 11], "draw_pag": [0, 10, 11], "get_data_dict_pag": [0, 10, 11], "normalize_bounding_box": [0, 10, 11], "page_to_layoutlm_encod": [0, 10, 11], "prepare_data": [0, 10, 11], "yolo": [0, 10, 15], "parse_yolo_txt": [0, 10, 12], "parse_yolo_txt_lin": [0, 10, 12], "automatic_region_detect": [0, 15], "correct_csv_manu": [0, 10, 15], "detect_region": [0, 10, 15], "write_csv_manu": [0, 10, 15], "map_util": [0, 15], "initialize_general_result": [0, 10, 15], "update_general_result": [0, 10, 15], "get_olr_region_count": [0, 10, 15], "get_olr_splits_page_id": [0, 10, 15], "get_page_region_dicts_from_via": [0, 10, 15], "select_page_regions_by_typ": [0, 10, 15], "sort_to_reading_ord": [0, 10, 15], "text_process": [0, 14, 15, 16, 17, 18], "canonical_class": [0, 15, 16, 17, 20], "canonicalannot": [0, 13, 15], "get_text_window": [0, 13], "text": [0, 1, 2, 6, 7, 8, 9, 13, 17, 18, 20], "canonicalcommentari": [0, 7, 10, 13, 15, 19, 20], "from_json": [0, 13, 16, 17], "ocr_gt_pag": [0, 13], "to_alto": [0, 13], "to_json": [0, 13, 17], "canonicalent": [0, 13, 15], "canonicalhyphen": [0, 13, 15], "canonicallin": [0, 13, 15, 20], "canonicalpag": [0, 1, 11, 13, 15, 20], "canonicalregion": [0, 13, 15, 16, 20], "canonicalsect": [0, 13, 15], "canonicalsent": [0, 13, 15], "canonicaltextcontain": [0, 13, 15, 16, 17, 20], "id": [0, 1, 5, 6, 7, 11, 13, 16, 17], "index": [0, 8, 13, 14], "word_rang": [0, 1, 13, 17], "canonicalword": [0, 6, 13, 15, 20], "get_tc_type_class": [0, 13, 15], "cas_util": [0, 15], "align_cas_annot": [0, 13, 15], "basic_rebuild": [0, 13, 15], "compute_image_link": [0, 13, 15], "export_commentary_to_xmi": [0, 13, 15], "get_ca": [0, 13, 15], "get_iiif_url": [0, 13, 15], "import_page_ca": [0, 13, 15], "import_page_rebuild": [0, 13, 15], "rebuild_to_xmi": [0, 13, 15], "safe_import_page_annot": [0, 13, 15], "generic_class": [0, 15, 20], "commentari": [0, 1, 6, 7, 10, 13, 14, 15, 18, 20], "export_ocr_gt_file_pair": [0, 13], "get_pag": [0, 13], "get_sect": [0, 13], "olr_gt_pag": [0, 13], "page": [0, 1, 6, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20], "number": [0, 1, 4, 6, 8, 10, 13, 16, 17, 18], "textcontain": [0, 1, 13, 15, 17, 20], "children": [0, 6, 13, 16, 17, 18, 20], "parent": [0, 13, 16, 17, 18, 20], "type": [0, 1, 4, 6, 8, 10, 13, 17, 18, 20], "markup_process": [0, 15], "find_all_el": [0, 13, 15], "find_all_krakenhocr_el": [0, 13, 15], "find_all_pagexml_el": [0, 13, 15], "find_all_tesshocr_el": [0, 13, 15], "get_element_bbox": [0, 13, 15], "get_element_text": [0, 13, 15], "get_hocr_element_bbox": [0, 13, 15], "get_pagexml_element_bbox": [0, 13, 15], "ocr_class": [0, 15, 16, 17, 20], "ocrcommentari": [0, 6, 10, 13, 15, 16, 17, 20], "from_ajmc_data": [0, 13, 17], "ocr_gt_page_id": [0, 13], "reset": [0, 6, 13, 17], "to_canon": [0, 13, 17], "via_project": [0, 1, 10, 13, 17, 19], "ocrpag": [0, 1, 6, 10, 11, 13, 15, 17, 20], "markup": [0, 13], "ocr_format": [0, 13], "optimis": [0, 13, 16, 17, 18], "to_inception_dict": [0, 13], "to_inception_json": [0, 13], "ocrtextcontain": [0, 13, 15, 20], "adjust_bbox": [0, 13], "ocrword": [0, 6, 11, 13, 15, 20], "olrregion": [0, 10, 13, 15], "from_via": [0, 13], "rawannot": [0, 13, 15], "rawent": [0, 13, 15], "from_cas_annot": [0, 13], "rawhyphen": [0, 13, 15], "rawsect": [0, 13, 15], "rawsent": [0, 13, 15], "contain": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18, 19, 20], "all": [1, 2, 5, 6, 7, 8, 9, 10, 13, 17, 18, 19, 20], "helper": [1, 8, 19, 20], "function": [1, 4, 5, 6, 7, 8, 10, 13, 14, 18, 20], "object": [1, 2, 5, 6, 8, 10, 13, 16, 17, 18, 20], "hard": 1, "code": [1, 2, 8, 9, 13, 16, 17], "which": [1, 4, 6, 7, 8, 10, 13, 16, 17, 18, 19, 20], "ar": [1, 6, 8, 10, 13, 16, 17, 18, 20], "i": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20], "e": [1, 4, 5, 6, 7, 9, 10, 11, 13, 17, 18, 19, 20], "must": [1, 8, 13, 18, 20], "access": [1, 17, 19], "task": [1, 4, 18, 20], "specif": [1, 5, 17, 19, 20], "repositori": [1, 7, 19], "These": [1, 17, 18, 20], "includ": [1, 8, 10, 17, 20], "notabl": [1, 8, 11], "allow": [1, 6, 13, 17, 18, 19, 20], "handl": [1, 4, 6, 9, 13, 18], "systemat": [1, 17, 19, 20], "": [1, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 18, 19, 20], "data": [1, 2, 4, 6, 7, 8, 9, 10, 11, 13, 17, 19, 20], "organis": 1, "see": [1, 6, 8, 9, 13, 16, 17], "notebook": [1, 17, 18, 20], "data_organis": [1, 17], "ipnb": 1, "more": [1, 6, 8, 10, 13, 16, 17, 18, 20], "retriev": [1, 10, 17, 18], "inform": [1, 13, 16, 17, 19, 20], "from": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19], "variou": [1, 19, 20], "project": [1, 10, 16, 17, 20], "spreadsheet": 1, "py": [1, 4, 8, 9, 16, 18, 20], "math": 1, "mainli": 1, "deal": [1, 5, 6, 7, 16, 17, 18, 19, 20], "interv": 1, "our": [1, 17, 18, 20], "canon": [1, 10, 13, 19, 20], "format": [1, 6, 7, 11, 13, 16, 18, 20], "below": [1, 18, 20], "central": [1, 6], "class": [1, 2, 5, 6, 8, 13, 18, 20], "singl": [1, 4, 5, 6, 7, 8, 13, 16, 17, 18, 19, 20], "place": [1, 6, 13, 17, 19], "provid": [1, 16, 17, 18], "decor": [1, 20], "them": [1, 5, 8, 9, 10, 13, 18, 20], "easili": [1, 17], "an": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 18, 20], "geometr": 1, "bound": [1, 8, 11, 16, 17, 20], "box": [1, 6, 8, 10, 11, 13, 16, 17, 20], "receiv": [1, 8], "everyth": 1, "doesn": [1, 7, 8, 9, 13, 20], "t": [1, 7, 8, 9, 13, 17, 18, 20], "fit": 1, "anywher": 1, "els": [1, 4, 8, 17], "It": [1, 4, 5, 6, 10, 13, 16, 17, 18, 19, 20], "gener": [1, 8, 9, 10, 13, 16, 20], "lazi": [1, 18], "effici": [1, 17, 19, 20], "etc": [1, 13], "path": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19], "color": [1, 7, 8, 11], "spreadsheet_id": 1, "charset": [1, 6, 8], "mani": [1, 17], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 13, 16, 17, 18, 19, 20], "basic": [1, 7, 8, 13, 14, 18], "list": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20], "tupl": [1, 6, 8, 11, 13], "int": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 18], "bool": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "sourc": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20], "appli": [1, 7, 8, 10, 18], "make": [1, 5, 9, 17, 18], "sure": [1, 13], "one": [1, 5, 8, 13, 16, 18, 20], "i1": 1, "i2": 1, "comput": [1, 6, 8, 16, 18, 20], "overlap": [1, 6, 8, 10, 17], "between": [1, 4, 6, 7, 8, 17, 20], "two": [1, 6, 17, 18, 20], "defin": [1, 8, 18], "start": [1, 5, 10, 13, 17, 18, 20], "stop": 1, "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 19], "A": [1, 4, 5, 6, 7, 8, 10, 11, 13, 17, 18], "boundari": 1, "return": [1, 4, 5, 6, 7, 8, 10, 13, 18, 20], "The": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "length": [1, 4, 5, 7, 8], "check": [1, 6, 7, 20], "dividend": [1, 18], "divisor": [1, 18], "simpl": [1, 4, 5, 6, 7, 10, 13, 16, 17, 18, 20], "divis": 1, "np": [1, 4, 13, 18], "nan": 1, "equal": 1, "zero": [1, 8], "chunk": [1, 2, 6, 8, 17], "us": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20], "kwarg": [1, 5, 13], "argument": [1, 17, 18, 20], "mean": [1, 6, 8, 18, 19, 20], "take": [1, 8, 10, 13, 17, 20], "ani": [1, 4, 5, 8, 13, 17, 18, 20], "set": [1, 4, 6, 7, 8, 11, 17, 18], "should": [1, 5, 6, 8, 9, 13, 19, 20], "therefor": [1, 8, 13, 17, 19, 20], "alwai": [1, 18], "call": [1, 7, 8, 17, 18, 19, 20], "parenthes": 1, "unlik": 1, "tradit": 1, "follow": [1, 4, 10, 13, 17, 19, 20], "grammar": [1, 20], "str": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18], "my_format_valu": 1, "exampl": [1, 4, 5, 6, 7, 16, 17], "snippet": [1, 18, 20], "greet": 1, "hello": [1, 5], "def": [1, 17, 18], "my_func": 1, "greeter": 1, "sai": [1, 17, 18, 20], "do": [1, 6, 8, 13, 17, 18, 20], "your": [1, 10, 13, 17, 18], "stuff": 1, "actual": [1, 17, 18, 20], "equival": [1, 5, 20], "__doc__": 1, "best": [1, 8, 10, 18, 20], "practic": [1, 18], "complianc": 1, "order": [1, 10, 13, 17, 18], "simpli": [1, 16, 17], "doctring_formatt": 1, "manag": [1, 18], "tool": [1, 2, 6, 20], "move": 1, "renam": 1, "replac": [1, 5], "get": [1, 4, 5, 6, 9, 10, 13, 16, 17, 18, 19, 20], "comm_id": [1, 7, 16, 17], "gt": [1, 6, 7, 16, 18], "directori": [1, 6, 7, 9, 10, 13, 14, 17, 18], "same": [1, 17, 18], "check_comm_onli": 1, "fals": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13], "verifi": 1, "sheet_page_id": 1, "vice": [1, 6], "versa": [1, 6], "mark": 1, "groundtruth": [1, 4, 6, 13, 19], "present": [1, 8], "respect": [1, 6, 11, 13, 20], "If": [1, 4, 5, 6, 7, 8, 9, 13, 16, 17, 18, 19], "differ": [1, 5, 17, 18, 20], "via": [1, 2, 10, 13, 16, 17], "print": [1, 8, 17, 19], "log": 1, "error": [1, 4, 6, 10], "In": [1, 10, 17, 18, 19], "case": [1, 5, 10, 16, 17, 18, 20], "g": [1, 4, 5, 6, 7, 9, 10, 11, 13, 17, 18, 20], "sophoclesplaysa05campgoog": [1, 6, 7, 13, 16, 17, 19], "all_comm_id": [1, 6, 13], "whether": [1, 4, 6, 8, 10, 13, 18], "onli": [1, 6, 7, 8, 13, 16, 17, 18, 19, 20], "where": [1, 4, 6, 7, 8, 9], "section": [1, 13, 17, 19], "annot": [1, 10, 13, 19], "sheet_pag": 1, "via_pag": 1, "clean": [1, 7], "xxxxxxx": 1, "output": [1, 5, 6, 7, 8, 9, 10, 13, 16, 18, 19, 20], "dir": [1, 6, 7, 10, 18, 19], "lace": [1, 19], "other": [1, 8, 10, 13, 17, 20], "weird": 1, "perform": [1, 4, 6, 8, 17, 18, 20], "saniti": 1, "base": [1, 2, 5, 6, 8, 13, 18, 19, 20], "That": 1, "folder": [1, 13, 17, 18], "structur": [1, 10, 13, 14, 16, 17, 18, 20], "request": 1, "exist": [1, 7, 9, 13], "correct": [1, 6, 10, 19], "have": [1, 6, 8, 10, 13, 16, 17, 18, 19, 20], "right": [1, 2, 8], "extens": [1, 2, 7, 10, 13], "compliant": [1, 4, 5, 13, 16, 17], "file_rel_path": 1, "old_pattern": 1, "new_pattern": 1, "date": 1, "datetim": 1, "none": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18], "62": 1, "time": [1, 7, 8, 10, 17, 20], "year": 1, "2021": 1, "month": 1, "1": [1, 4, 5, 6, 7, 8, 10, 11, 17, 20], "dai": 1, "hour": 1, "minut": 1, "second": [1, 4, 8, 17, 18], "111111": 1, "12": [1, 6, 8], "31": [1, 13], "23": [1, 17], "59": 1, "1cvnxx": 1, "uniqu": [1, 5], "each": [1, 4, 5, 6, 7, 8, 13, 17, 18, 19, 20], "form": [1, 5, 7, 8], "6": [1, 8, 10, 16, 17], "digit": 1, "letter": [1, 8, 10], "first": [1, 4, 8, 13, 16, 17, 18, 20], "correspond": [1, 4, 5, 6, 7, 8, 10, 11, 13, 17, 18, 19, 20], "last": [1, 8, 17], "januari": 1, "b": [1, 4, 5], "decemb": 1, "third": 1, "1st": 1, "11": [1, 8], "k": 1, "21": 1, "fourth": 1, "1am": 1, "10am": 1, "fifth": 1, "1min": 1, "11min": 1, "sixth": 1, "1sec": 1, "c": [1, 8], "12sec": 1, "default": [1, 4, 6, 8, 10, 13, 19, 20], "displai": [1, 20], "10": [1, 8], "arab": 1, "26": 1, "latin": [1, 6, 8], "lower": 1, "capit": [1, 8], "convert": [1, 13, 17, 20], "current": 1, "string": [1, 2, 6, 8, 13], "panda": [1, 2, 4, 6, 7], "datafram": [1, 2, 4, 7], "metadata": [1, 2, 7], "pd": [1, 4], "fixed_min_len": 1, "symbol": [1, 7], "0123456789abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1, "integ": [1, 8], "x": [1, 7, 8, 13], "3": [1, 5, 6, 7, 8, 9, 13, 17, 20], "2": [1, 5, 7, 8, 16, 17, 18, 19, 20], "01": [1, 8, 17], "binari": 1, "0123456789ab": 1, "00b": 1, "minimum": 1, "prepend": 1, "0": [1, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18], "necessari": [1, 17, 18], "map": [1, 4, 7, 8, 10, 11, 13, 17, 20], "repres": [1, 8, 13, 17, 20], "result": [1, 5, 6, 9, 13, 20], "numbers_lett": 1, "relative_src_path": 1, "relative_dst_path": 1, "base_dir": [1, 7, 13, 17], "posixpath": [1, 6, 7, 9, 13], "user": [1, 6, 7, 8, 9, 13, 19], "sven": [1, 6, 7, 8, 9, 13, 19], "drive": [1, 7, 13, 19], "_ajax": [1, 7, 13, 19], "ajaxmulticommentari": [1, 7, 13, 19], "commentaries_data": [1, 7, 19], "rel": [1, 20], "destin": [1, 6], "comms_data_dir": [1, 16, 17, 19], "valu": [1, 4, 10, 13, 18], "sheet_id": 1, "sheet_nam": 1, "read": [1, 6, 8, 10, 13, 17, 18], "googl": [1, 18], "sheet": [1, 10], "work": [1, 7, 10], "2022": 1, "09": 1, "29": 1, "http": [1, 6, 7, 8, 9, 10, 13], "towardsdatasci": 1, "com": [1, 6, 13], "without": [1, 5, 8, 13, 18], "api": [1, 18], "5c468536550": 1, "info": 1, "part": [1, 18, 20], "url": [1, 2, 4, 5, 7, 13], "after": [1, 4, 8, 13, 17, 19], "d": [1, 9, 18], "instanc": [1, 4, 5, 6, 8, 13, 17], "sheet1": 1, "olr_gt": [1, 10, 13], "recurs": [1, 7], "walk": [1, 18], "over": [1, 7, 8, 17], "parent_dir": 1, "filter_func": 1, "callabl": 1, "filenam": [1, 10, 18], "input": [1, 5, 8, 18], "boolean": [1, 18], "oper": [1, 6, 17, 18], "point": [1, 17, 18], "iter": [1, 4, 5, 6, 7, 8, 10, 13, 18], "coordin": [1, 6, 13, 16], "can": [1, 2, 8, 10, 13, 16, 17, 18, 19, 20], "instanci": 1, "directli": [1, 8, 10, 13, 17, 18, 20], "constructor": 1, "properti": [1, 2, 6, 8, 13, 17, 18, 20], "y": [1, 7, 10, 13], "upper": 1, "left": [1, 6, 8], "classmethod": [1, 2, 8, 13], "center_x": 1, "center_i": 1, "w": [1, 5, 8, 13, 18, 20], "h": [1, 13], "creat": [1, 2, 4, 5, 7, 9, 13, 20], "ndarrai": [1, 4, 8, 13, 18], "numpi": [1, 18], "arrai": 1, "coherc": 1, "n": [1, 8, 17, 18], "corner": 1, "while": [1, 8, 18], "find": [1, 6, 13, 17, 18], "minim": [1, 6, 17, 18, 20], "resiz": [1, 8], "word": [1, 2, 5, 6, 8, 11, 13, 16, 17, 18, 20], "discard": 1, "would": [1, 5, 13, 17, 20], "taller": 1, "longer": 1, "axi": 1, "help": 1, "avoid": [1, 8, 18], "line": [1, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 20], "bbox1": 1, "bbox2": 1, "threshold": [1, 6, 7, 10], "float": [1, 4, 6, 7, 8, 10, 11, 18], "intersect": 1, "higher": [1, 8, 17], "than": [1, 6, 18], "union": [1, 18], "proport": [1, 6, 7], "measur": [1, 17], "rectangl": [1, 18, 20], "sequenc": [1, 5, 8], "8": [1, 4, 6, 7, 8, 17], "15": 1, "16": [1, 8], "entir": [1, 4, 17, 19], "within": [1, 4, 8, 13, 20], "strictli": [1, 18], "For": [1, 8, 13, 16, 17, 19, 20], "r": [1, 6, 16, 17, 20], "we": [1, 8, 17, 20], "true": [1, 4, 5, 6, 7, 8, 10, 11, 13, 18], "assert": 1, "merg": [1, 9], "effisci": 1, "purpos": [1, 13, 17, 20], "wheter": [1, 6, 7, 9], "123": 1, "87": 1, "process": [1, 2, 5, 6, 8, 10, 20], "consistantli": 1, "cv2": [1, 10, 17, 18], "impli": 1, "ascend": 1, "toward": 1, "bottom": [1, 8], "margin": [1, 7, 17], "slice": 1, "self": [1, 4, 13, 16, 17, 18, 20], "delimit": [1, 2], "desir": [1, 8, 10, 13], "extra": 1, "around": [1, 4, 7, 8, 9, 20], "new": [1, 5, 9, 10, 17], "Its": [1, 18, 20], "channel": [1, 8], "output_path": [1, 13, 17, 18], "img": [1, 7, 8, 11, 18], "img_matrix": 1, "invert": [1, 8, 17], "otsu": 1, "method": [1, 4, 6, 8, 13, 17, 18, 20], "stroke_color": 1, "255": [1, 7], "stroke_thick": 1, "fill_color": 1, "fill_opac": 1, "text_siz": 1, "text_thick": 1, "thick": 1, "fill": [1, 4, 8], "opac": 1, "written": [1, 6, 13, 18], "size": [1, 2, 4, 6, 7, 8, 10], "modifi": [1, 6, 13], "outfil": 1, "white": [1, 8], "findcontour": [1, 17], "potenti": [1, 18, 20], "artifact_perimeter_threshold": 1, "remov": [1, 7, 8, 10, 17], "perimet": 1, "inferior": 1, "target_height": [1, 8], "target": 1, "maintain": 1, "aspect": 1, "ratio": 1, "rgb": 1, "bgr": 1, "arg": [1, 5, 8, 13, 18], "custom": [1, 5, 7, 8, 10, 16, 19], "space": 1, "align": [1, 5, 6, 17, 20], "row": [1, 6], "loop": [1, 4, 8, 18], "level": [1, 4, 6, 16, 17, 18, 20], "20": [1, 13], "wraper": 1, "logger": 1, "declar": 1, "output_fil": [1, 5, 8], "import": [1, 4, 7, 8, 10, 13, 14, 16, 18, 19, 20], "iterable_typ": 1, "element": [1, 5, 6, 8, 10, 13, 17, 20], "log_messag": 1, "log_fil": 1, "append": [1, 5, 18], "command": [1, 6, 9], "env_nam": 1, "conda_install_dir": 1, "prefix": [1, 11], "conda": 1, "env": [1, 8, 9], "activ": 1, "usabl": 1, "subshel": [1, 9], "through": [1, 17, 18, 20], "list_": 1, "pad": [1, 5, 7, 8, 13], "divid": [1, 6], "latter": [1, 8], "split": [1, 7, 10, 11], "1000": 1, "execut": [1, 6], "schema_path": [1, 13], "templat": [1, 13], "schema": [1, 13], "json": [1, 4, 6, 8, 10, 13, 16, 19, 20], "valid": [1, 6, 7, 8, 13], "against": [1, 6], "draft6valid": 1, "unicod": [1, 6, 7, 13], "serv": [1, 17], "charact": [1, 6, 7, 8, 13, 18], "fallback": [1, 8], "\u03b3\u03b5\u03b9\u03ac": 1, "\u03c3\u03bf\u03c5": 1, "\u03ba\u03cc\u03c3\u03bc\u03b5": 1, "world": [1, 5, 6], "greek": [1, 6, 7, 8], "count": [1, 6, 10, 16, 20], "char": [1, 6, 16, 18], "\u03b3\u03b5\u03b9\u03b1": 1, "\u03c3\u03b1\u03c2": 1, "7": [1, 16, 17], "nfc": [1, 7, 13], "normal": [1, 6, 7, 8, 13], "nfd": [1, 8], "numer": [1, 6, 8], "punctuat": [1, 6, 8], "match": [1, 6, 13, 18], "end": [1, 4, 5, 13, 17, 19, 20], "rang": [1, 17, 18], "otherwis": 1, "harmonise_funct": 1, "harmonise_space_char": 1, "5": [1, 7, 8, 13, 16, 17], "strict": 1, "explanatori": [1, 4, 13], "re": [1, 6, 17], "pattern": [1, 6, 13, 17], "\u00f4": [1, 6], "\u00ff": [1, 6], "abov": [1, 7, 16, 17, 18, 20], "consid": [1, 10, 13, 16], "ocr_run_id": [1, 13, 17], "ocr_run_pattern": 1, "wip": [2, 7], "bibliograph": 2, "record": [2, 6, 7], "soup": [2, 6], "beautifulsoup": [2, 6, 13], "tag_nam": 2, "xmls_dir": 2, "n_first_el": 2, "recurrence_threshold": 2, "corpus_id": [2, 8], "abc": 2, "mother": [2, 13], "instanti": [2, 13, 16, 17, 18, 20], "child": [2, 17, 20], "abstract": [2, 13, 20], "chunk_siz": 2, "unit": 2, "chararct": 2, "logeion": 2, "dict": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18], "static": 2, "onlin": 2, "webscrap": 2, "attribut": [2, 10, 13, 16, 18, 20], "oai_files_dir": 2, "json_output_path": 2, "xml": [2, 13], "attribute_prefix": 2, "dcterm": 2, "base_request": 2, "output_dir": [2, 4, 6, 7, 8, 9, 10, 11, 13], "additional_request_term": 2, "resum": 2, "filename_prefix": 2, "scrape": 2, "resumptiontoken": 2, "oai": 2, "submodul": [3, 14, 15], "hipe_iob": [3, 4], "modul": [3, 14, 15, 18], "hipedataset": [3, 4, 5], "create_prediction_dataset": [3, 4, 5], "prepare_dataset": [3, 4, 5], "customdataset": [3, 4, 5, 11], "align_from_token": [3, 4, 5], "align_labels_to_token": [3, 4, 5], "align_to_token": [3, 4, 5], "manual_trunc": [3, 4, 5], "nerify_label": [3, 4, 5], "sort_ner_label": [3, 4, 5], "write_predictions_to_tsv": [3, 4, 5], "token": [4, 5, 11], "classif": 4, "json_path": [4, 11, 13, 16, 17], "pars": 4, "also": [4, 7, 16, 17, 18, 19, 20], "transform": [4, 5, 6, 7, 17], "device_nam": 4, "torch": [4, 8], "devic": [4, 8], "rais": [4, 18], "cuda": 4, "avail": 4, "pretrainedmodel": 4, "batch_siz": [4, 8], "ids_to_label": [4, 10, 11, 12], "rebuild_ner_label": 4, "do_debug": [4, 11], "seqev": 4, "dure": 4, "inherit": [4, 8, 13, 20], "implement": [4, 8, 17, 18, 20], "least": [4, 17], "__len__": 4, "__getitem__": 4, "item": [4, 7], "alik": 4, "model_input": 4, "tensor": [4, 8], "label": [4, 5, 8, 11, 13], "origin": [4, 8, 10], "o": [4, 5, 8], "per": [4, 8, 11], "simul": 4, "ner": [4, 13, 19], "break": 4, "labels_column": [4, 5], "hipe_script_path": 4, "groundtruth_tsv_path": 4, "groundtruth_tsv_url": 4, "hipe": 4, "reconstruct": [4, 6], "tsv": [4, 5, 6, 7], "compar": [4, 6, 20], "scorer": 4, "groundtruth_path": 4, "preds_path": 4, "output_suffix": 4, "nerc_coars": 4, "clef": 4, "system": [4, 19, 20], "df": 4, "wrapper": [4, 7, 9, 13], "seqeval_output": 4, "multiindex": 4, "metric": [4, 10], "entiti": [4, 13, 17, 19], "pair": [4, 13], "overall_metr": 4, "overal": 4, "look": [4, 13, 16, 19], "like": [4, 5, 10, 13, 16, 17, 18, 19], "ent_type1": 4, "precis": [4, 17], "recal": [4, 17], "overall_recal": 4, "empti": [4, 7, 9, 13, 17, 18], "batch": [4, 8], "requir": [4, 7, 17, 18, 20], "max_length": [4, 5], "input_id": [4, 5], "so": [4, 5, 8, 17, 18], "ex": 4, "dataload": [4, 8], "collect": [4, 13, 17, 18], "highli": [4, 18], "inspir": 4, "huggingfac": 4, "run_ner": 4, "gpu": 4, "entrypoint": [4, 10, 18], "seed": 4, "random": [4, 8], "train_dataset": [4, 8], "eval_dataset": [4, 8], "pretrainedtoken": 4, "doe": [4, 5, 6, 7, 17, 18], "At": 4, "epoch": 4, "save": [4, 7, 8, 9, 10, 13], "checkpoint": 4, "best_model": 4, "ha": [4, 6, 13, 17, 18, 19, 20], "highest": [4, 10], "score": 4, "argpars": [4, 5], "namespac": [4, 5], "trainingargu": 4, "wrap": [5, 20], "batchencod": 5, "tokenizerfast": 5, "tokens_to_words_offset": 5, "to_align": 5, "previou": 5, "untoken": 5, "contrari": [5, 18], "he": 5, "llo": 5, "rld": 5, "offset": [5, 8], "labels_to_id": [5, 11], "label_all_token": 5, "null_label": 5, "100": [5, 8, 13], "special": [5, 18, 20], "As": [5, 17, 18, 19, 20], "chang": [5, 6, 9, 13, 17, 18], "sub": [5, 13], "instead": [5, 6, 8, 13, 17, 18], "special_token": 5, "manual": [5, 10], "truncat": 5, "untrunc": 5, "featur": 5, "inputs_id": 5, "attention_mask": 5, "legaci": [5, 6, 13], "maximum": [5, 6], "add_i": 5, "add_o": 5, "nerifi": 5, "ad": [5, 6, 8, 13, 18], "colln": 5, "add": [5, 6, 17, 20], "sort": [5, 10], "alphabet": 5, "classnam": 5, "tsv_line_numb": 5, "tsv_path": 5, "tsv_url": 5, "its": [5, 7, 8, 9, 13, 16, 17, 18, 19, 20], "three": [5, 17, 20], "alin": 5, "convert_tensor": [6, 8], "convert_to_str": [6, 8], "process_str": [6, 8], "chunks_to_img_map": [6, 8], "img_width": [6, 8, 11], "text_length": [6, 8], "texts_tensor": [6, 8], "distribut": [6, 8], "classes_to_indic": [6, 8], "indices_to_class": [6, 8], "forward": [6, 8], "from_config": [6, 8], "store": [6, 16, 17, 18, 19, 20], "rather": [6, 20], "easier": [6, 18, 20], "tesstrain": 6, "github": [6, 9], "possibl": [6, 17, 18], "xl_path": 6, "desktop": [6, 7], "tess_xp": [6, 7], "xlsx": 6, "config_typ": 6, "seri": 6, "doubl": [6, 7], "given": [6, 7, 8, 9, 13, 19], "bag": 6, "edit": 6, "distanc": 6, "gt_bag": 6, "pred_bag": 6, "error_count": 6, "groundtruth_bag": 6, "pass": [6, 8, 9], "you": [6, 13, 16, 17, 18, 19, 20], "want": [6, 16, 17, 18], "multipl": [6, 9, 17, 20], "statist": [6, 8], "write_fil": 6, "word_overlap_threshold": 6, "leav": [6, 8, 13, 17], "gt_page": 6, "pred_pag": 6, "editops_record": 6, "region": [6, 10, 11, 13, 16, 17, 20], "extrem": [6, 17, 18], "detail": [6, 17, 20], "caract": 6, "rate": 6, "cr": 6, "levenshtein": 6, "primari": [6, 16], "how": [6, 17, 18, 20], "ccr": 6, "cwr": 6, "veri": [6, 8, 10, 13, 17, 18, 20], "straightforward": [6, 17], "thei": [6, 7, 16, 17, 18, 20], "total": 6, "document": [6, 8, 13, 16, 17], "linear": 6, "manner": 6, "prone": 6, "when": [6, 8, 10, 17, 18, 20], "layout": [6, 17, 20], "complex": [6, 17, 20], "formal": 6, "found": [6, 20], "calcul": 6, "onc": [6, 10, 17, 18], "gt_string": 6, "pred_str": 6, "among": [6, 20], "compris": 6, "h\u03b5ll_": 6, "world1": 6, "\u03b7\u03b5\u03b9\u03b9": 6, "4": [6, 7, 8, 17, 19], "misrecogn": 6, "select": [6, 16, 19], "gt_dir": 6, "ocr_dir": [6, 13, 17], "gt_suffix": 6, "txt": [6, 7, 8, 9, 13], "ocr_suffix": 6, "error_record": 6, "suffix": [6, 7, 9], "updat": [6, 7], "aggreg": 6, "editop": 6, "harmonis": 6, "img_height": [6, 8, 11], "initi": [6, 18], "blank": [6, 8, 17], "html": [6, 8, 9, 13], "is_gt": 6, "is_fals": 6, "content": [6, 17], "therebi": [6, 7], "both": [6, 8, 10, 17, 20], "pred": 6, "red": 6, "initilis": 6, "determin": [6, 17, 20], "wa": [6, 8, 17], "gt_line": 6, "ocr_lin": [6, 8], "gt_word": 6, "ocr_word": 6, "pred_word": 6, "overlap_threshold": 6, "spacial": 6, "cer": 6, "NOT": [6, 10], "relat": [6, 17, 18, 19], "issu": [6, 8, 13, 17, 18], "crummi": [6, 17], "out": [6, 8], "final": [6, 20], "ground": 6, "truth": 6, "come": [6, 17, 20], "bow_error_count": 6, "coord_error_count": 6, "regular": [6, 7, 8], "pil_encod": 6, "unic": 6, "pil_layout_engin": 6, "raqm": 6, "ttf": 6, "otf": 6, "missing_threshold": 6, "glyph": 6, "One": [6, 17, 18], "option": [6, 8, 9], "miss": 6, "pil": [6, 7, 8, 11], "font_dir": [6, 11], "bunch": 6, "commentary_id": [6, 10, 19], "model_path": 6, "kraken": [6, 8, 17], "ocr_path": [6, 13, 17], "guess": [6, 8], "absolut": [6, 10, 13, 18, 19], "either": [6, 13], "pagexml": [6, 13, 17], "krakenhocr": [6, 13], "tesshocr": [6, 13], "dataset_nam": 6, "experiment_id": [6, 9], "model_nam": [6, 9], "traineddata_nam": [6, 9], "unpack": [6, 9], "traineddata": [6, 9], "wordlist_nam": [6, 9], "img_dir": [7, 9, 10, 13], "img_path": [7, 8, 10, 13], "prepar": [7, 8, 11, 20], "manipul": [7, 13, 17, 20], "dts_config": 7, "dts_metadata": 7, "sampl": [7, 11], "what": [7, 8, 13, 17, 18], "specifi": [7, 8], "dataset_dir": 7, "param": 7, "dts_dir": 7, "overwrit": [7, 9, 13], "dts_id": 7, "note": [7, 8, 13, 16, 17, 18, 19, 20], "overwritten": 7, "accord": [7, 10, 17], "configur": [7, 8], "pog": 7, "unicode_form": 7, "root_dataset_nam": 7, "img_extens": [7, 10], "png": [7, 9, 10, 13, 17, 19], "txt_extens": 7, "double_line_threshold": 7, "rename_with_parents_dir": 7, "export": [7, 13, 20], "drope": 7, "non": [7, 8, 17, 18], "link": [7, 13, 20], "trail": 7, "whitespac": 7, "newlin": 7, "detect": [7, 10, 17], "averag": [7, 16], "compute_initial_normalized_height": 7, "delet": [7, 10, 17], "colonna1975": 7, "deromilly1976": 7, "ferrari1974": 7, "finglass2011": 7, "garvie1998": 7, "hermann1851": 7, "kamerbeek1953": 7, "paduano1982": 7, "schneidewinnauckradermacher1913": 7, "stanford1963": 7, "untersteiner1934": 7, "wecklein1894": 7, "annalsoftacitusp00taci": 7, "bsb10234118": 7, "cu31924087948174": [7, 19], "lestragdiesdeso00tourgoog": 7, "pvergiliusmaroa00virggoog": 7, "sophokle1v3soph": 7, "thukydides02thuc": 7, "export_gt_file_pair": 7, "source_dataset": 7, "archiscrib": 7, "gt4histocr": 7, "pogretra_source_dir": 7, "pogretra": [7, 19], "v1": [7, 19], "zenodo": 7, "org": [7, 8, 13], "4774201": 7, "tar": 7, "gz": 7, "git": 7, "download": [7, 10], "porta_fontium": 7, "raw": 7, "recreat": 7, "even": [7, 17, 18], "alreadi": [7, 17, 18], "text_lin": 7, "image_height": [7, 12], "image_suffix": 7, "txt_suffix": 7, "synthes": 7, "sophoclesplaysa05campgoog_0012_01": 7, "python": [7, 9, 13, 17, 18, 20], "pl": 7, "pagifi": 7, "ocrdataset": 7, "background": [7, 8], "interlin": 7, "config_path": 8, "rewrit": 8, "lm_path": 8, "alpha": 8, "beta": 8, "cutoff_top_n": 8, "40": 8, "cutoff_prob": 8, "beam_width": 8, "num_process": 8, "blank_index": 8, "seq_len": 8, "prob": 8, "probabl": 8, "ctcdecod": 8, "mini": 8, "transcript": [8, 13], "sever": [8, 18, 20], "subclass": 8, "_": [8, 13], "remove_repetit": 8, "return_offset": 8, "built": 8, "0x13297b830": 8, "argmax": 8, "repeat": 8, "well": [8, 17, 18], "network": 8, "expect": [8, 10, 18, 20], "seq_length": 8, "output_dim": 8, "step": [8, 17, 20], "script": [8, 18], "synthet": 8, "ocropy_degrad": 8, "copi": [8, 13], "im": 8, "eta": 8, "alpha_0": 8, "beta_0": 8, "degrad": 8, "nois": [8, 17], "consult": 8, "nonparametr": 8, "methodologi": 8, "2000": 8, "tanugo": 8, "et": 8, "al": 8, "And": [8, 17], "jitter": 8, "recommend": [8, 10, 13, 18], "stai": 8, "max": 8, "05": 8, "seem": [8, 20], "concentr": 8, "go": [8, 17, 18, 20], "amount": 8, "hole": 8, "try": [8, 13, 17], "few": [8, 10, 17, 18, 20], "No": [8, 17], "clue": 8, "paper": 8, "mode": [8, 9], "distort": 8, "sigma": 8, "ep": 8, "03": [8, 17], "delta": 8, "befor": [8, 18], "border": 8, "pixel": 8, "major": 8, "stroke": 8, "80": 8, "l": [8, 17], "line_count_per_font": 8, "200": 8, "add_numb": 8, "500": 8, "25": [8, 10], "textlin": 8, "fallback_font": 8, "kern": 8, "default_charset": 8, "show_imag": 8, "opt": 8, "anaconda3": [8, 9], "lib": 8, "python3": 8, "site": 8, "kei": [8, 10], "notic": [8, 13, 19, 20], "len": [8, 16, 18], "variant": 8, "eg": [8, 10, 13, 20], "bold": 8, "ital": 8, "belong": 8, "default_vari": 8, "line_length_distribut": 8, "fonts_distribut": 8, "kerning_distribut": 8, "mixed_charset": 8, "base_font_charset": 8, "inner": 8, "background_color": 8, "black": 8, "pilimag": 8, "top": 8, "linegen": 8, "infinit": 8, "max_batch_s": 8, "chunk_width": 8, "chunk_overlap": 8, "is_train": 8, "shuffl": 8, "per_worker_steps_run": 8, "iterabledataset": 8, "accross": 8, "worker": 8, "doc": [8, 13, 20], "stabl": 8, "img_padding_length": 8, "chunks_width": 8, "chunks_height": 8, "chunks_count": 8, "last_chunk_pad": 8, "img_tensor": 8, "n_chunk": 8, "extract": [8, 10, 13, 20], "rewritten": 8, "remaind": 8, "image_tensor": 8, "smallest": 8, "num_work": 8, "grayscal": 8, "initial_height": 8, "initial_width": 8, "resized_width": 8, "batched_chunk": 8, "chunk_height": 8, "num_class": 8, "were": 8, "reassembl": 8, "n_imag": 8, "eventu": 8, "dimens": 8, "encod": 8, "pt": 8, "utf": 8, "sampler": 8, "until": [8, 10], "full": 8, "growth_rat": 8, "32": 8, "block_config": 8, "24": 8, "num_init_featur": 8, "bn_size": 8, "drop_rat": 8, "memory_effici": 8, "customis": 8, "densenet": 8, "backbon": 8, "pool": 8, "squeez": 8, "adapt": 8, "accept": [8, 18], "block": 8, "everi": [8, 17, 18, 19, 20], "overridden": 8, "although": 8, "recip": 8, "need": [8, 17, 18], "afterward": 8, "sinc": [8, 17], "former": [8, 17, 18], "care": [8, 17], "regist": 8, "hook": 8, "silent": 8, "ignor": 8, "optim": [8, 10, 13, 18], "schedul": 8, "lr_schedul": 8, "scheduler_step_r": 8, "snapshot_r": 8, "snapshot_path": 8, "pathlib": [8, 18], "evaluation_r": 8, "evaluation_output_dir": 8, "total_step": 8, "br": 9, "mr": 9, "combin": 9, "architectur": [9, 17, 18], "xp_dir": 9, "wordlist": 9, "source_traineddata_nam": 9, "output_model_nam": 9, "lang": 9, "abbrevi": [9, 18, 20], "traineddata_path": 9, "unpacked_dir": 9, "xp_config": 9, "overwrite_xp": 9, "overwrite_model": 9, "overwrite_dataset": 9, "repo": 9, "subdirectori": 9, "tabl": 9, "model_config": 9, "tess": 9, "model_id": 9, "models_id": 9, "psm": 9, "img_suffix": 9, "tessdata_prefix": 9, "tesseract_": 9, "tessdata": 9, "assum": [9, 16], "instal": 9, "separ": [9, 10], "eng": 9, "fra": 9, "io": [9, 18], "tessdoc": 9, "segment": 9, "scratch": 9, "bin": 9, "subprocess": 9, "tesscommand": 9, "proper": 9, "automat": [10, 17], "csv": 10, "csv_filenam": 10, "quot": 10, "dilation_kernel_s": 10, "dilation_iter": 10, "draw_imag": 10, "img_output_dir": 10, "via_csv_dict": 10, "artifact_size_threshold": 10, "003": 10, "interest": [10, 13, 20], "dilat": 10, "dictionnari": 10, "kernel": 10, "prefer": [10, 18], "odd": 10, "tweak": 10, "improv": [10, 13], "via_dict": [10, 13], "complet": [10, 17, 18, 20], "under": [10, 17, 20], "artifact": 10, "express": [10, 13], "percentag": [10, 13], "done": [10, 18], "recogn": [10, 17], "wider": 10, "shrink": [10, 17], "back": 10, "seen": [10, 20], "To": [10, 17, 18, 20], "bigger": 10, "spread": 10, "squar": 10, "wai": [10, 20], "chose": 10, "test": [10, 17, 18], "satisfactori": 10, "pleas": [10, 13, 16, 18, 20], "transfer": 10, "via2": 10, "www": 10, "robot": 10, "ox": 10, "ac": 10, "uk": 10, "vgg": 10, "softwar": 10, "open": 10, "menu": 10, "default_via_attribut": 10, "some": [10, 20], "refer": [10, 13, 20], "automatic_region_classif": 10, "_script": [10, 18], "jpg": 10, "csv_dict": 10, "detected_annot": 10, "general_result": 10, "xp_name": 10, "fine_to_coars": 10, "fine": 10, "coars": 10, "page_id": [10, 13], "region_typ": [10, 13, 16, 20], "overlap_thresh": 10, "algorithm": [10, 17], "particularli": 10, "useful": 10, "unord": 10, "lowest": [10, 18], "signific": 10, "leftest": 10, "reorder": 10, "column": [10, 17], "correctli": 10, "labels_to_color": 11, "highlight": 11, "roi": [11, 13], "regions_to_coarse_label": 11, "feature_extractor": 11, "unknownify_token": 11, "text_onli": 11, "data_dict": 11, "comm_id_1": 11, "sample_s": 11, "featureextractor": 11, "get_label": 11, "page_set": 11, "layoutlmv2": 11, "cat": 11, "dog": 11, "focu": 11, "image_width": 12, "is_groundtruth": 12, "window_s": 13, "lazyobject": [13, 18], "v2": [13, 17, 19], "children_typ": [13, 20], "region_types_map": 13, "region_types_id": 13, "ocr_gt_onli": 13, "olr_gt_onli": 13, "copy_imag": 13, "primary_text": [13, 16], "prefac": 13, "translat": [13, 20], "introduct": 13, "line_number_text": 13, "page_numb": [13, 16], "appendix": 13, "app_crit": [13, 16], "bibliographi": 13, "footnot": [13, 17, 20], "running_head": 13, "table_of_cont": 13, "printed_marginalia": 13, "alto": [13, 17], "v": [13, 17, 18, 19], "region_types_to_segmonto": 13, "segmonto_to_value_id": 13, "ocr_gt": 13, "subset": 13, "locat": [13, 17, 18], "shift": 13, "wikidata_id": 13, "regions_typ": 13, "region_types_to_segmonto_id": 13, "filter": [13, 18], "exclud": 13, "undefin": 13, "section_typ": 13, "section_titl": 13, "corrupt": 13, "incomplete_continu": 13, "incomplete_trunc": 13, "tc_type": 13, "export_commentaries_to_xmi": 13, "cas_annot": 13, "rebuild": 13, "verbos": 13, "iiif_endpoint": 13, "iiif_link": 13, "pct": 13, "make_json": 13, "make_xmi": 13, "jsons_dir": 13, "xmis_dir": 13, "xmi": [13, 19], "grep": 13, "json_dir": 13, "xmi_path": 13, "xml_path": 13, "ca": 13, "lorem_ipsum": 13, "ajax": [13, 18], "iiif_manifest_uri": 13, "impresso": 13, "iiif": 13, "manifest": 13, "uri": 13, "ajmc_ne_corpus_path": 13, "ne": 13, "annotation_typ": 13, "incept": [13, 19], "fgiven": 13, "lemlink": 13, "typesystem_path": 13, "typesystem": 13, "iiif_map": 13, "pct_coordin": 13, "apach": 13, "uima": 13, "annotation_lay": 13, "manual_safe_check": 13, "featurestructur": 13, "unicode_format": 13, "librari": [13, 14, 18], "unicodedata": 13, "shortcut": 13, "sentenc": 13, "hyphen": 13, "By": [13, 18], "drawn": 13, "appear": [13, 17, 20], "scan": [13, 20], "book": 13, "overview": 13, "todo": [13, 20], "hocr": [13, 17], "tag": 13, "extractor": 13, "bs4": [13, 17], "search": [13, 14], "x1": 13, "y1": 13, "x2": 13, "y2": 13, "cope": 13, "inconsist": [13, 17], "vagari": 13, "henc": [13, 18, 20], "eventhough": 13, "eleg": 13, "good": [13, 18, 20], "reason": [13, 18], "confid": 13, "via_path": [13, 17], "ocr_gt_dir": 13, "sections_path": 13, "reprens": 13, "_tess_bas": 13, "construct": 13, "28o09e_tess_bas": 13, "ocr_engin": 13, "ocr_model": 13, "wildcard": 13, "been": [13, 18], "include_ocr_gt": 13, "fact": [13, 17, 20], "mai": [13, 17, 19, 20], "perfect": [13, 18], "happen": [13, 20], "fuzzi": 13, "reli": [13, 16, 17, 20], "fix": 13, "though": [13, 17, 18, 20], "far": 13, "wouldn": 13, "touch": 13, "unless": [13, 18], "word_id": 13, "initialis": 13, "debug_dir": 13, "slick": 13, "know": [13, 18], "debug": 13, "free": [13, 18], "up": [13, 17, 20], "memori": [13, 18], "serial": 13, "shape_attribut": 13, "rect": 13, "54": 13, "1230": 13, "453": 13, "region_attribut": 13, "text_window": 13, "warn": 13, "gold": 13, "packag": [14, 15, 18], "subpackag": [14, 15], "workbench": [14, 15], "understand": [14, 18], "goal": [14, 18], "guidelin": [14, 17], "ajmc": [16, 17, 18, 20], "framework": 16, "stat": 16, "simplest": 16, "standardis": 16, "can_json_path": 16, "3467o2_tess_retrain": [16, 17], "comm": 16, "import_from_ocr": 16, "ipynb": [16, 17, 18, 20], "particular": [16, 18, 20], "let": [16, 17, 20], "u": [16, 17, 20], "140th": 16, "160th": 16, "p": 16, "139": 16, "159": 16, "lt": 16, "0x152decc10": 16, "0x152defd90": 16, "0x152e030d0": 16, "mention": [16, 17, 20], "sophoclesplaysa05campgoog_0146": 16, "sum": 16, "411764705882353": 16, "quiet": [16, 17], "furnish": 16, "goe": 17, "involv": 17, "creation": 17, "later": [17, 20], "kind": 17, "basi": 17, "about": [17, 19], "sample_commentari": 17, "ocr_commentari": 17, "image_dir": 17, "cumbersom": 17, "hold": [17, 18], "abspath": 17, "howev": [17, 18], "sophoclesplaysa05campgoog_0148": 17, "image_path": 17, "here": [17, 18, 20], "still": 17, "functionn": 17, "won": [17, 18], "abl": [17, 18, 20], "tl": 17, "dr": 17, "skip": 17, "next": [17, 18], "don": [17, 18], "ask": 17, "yourself": 17, "problem": [17, 19], "enhanc": [17, 18, 20], "realli": 17, "itself": [17, 18], "cite": 17, "elong": 17, "stretch": 17, "neg": 17, "labyrinthin": 17, "often": [17, 18], "due": [17, 20], "span": 17, "side": 17, "diacrit": 17, "long": [17, 18, 20], "exhaust": 17, "pitfal": 17, "caveat": 17, "style": [17, 18], "becaus": 17, "individualist": 17, "wills": 17, "harmon": 17, "overarch": 17, "standard": 17, "share": [17, 18], "nest": [17, 18], "alon": 17, "inadequ": 17, "me": 17, "xml_page": 17, "attribute_1": 17, "attribute_2": 17, "xml_line": 17, "xml_word": 17, "foo": 17, "bar": 17, "zig": 17, "zag": 17, "themselv": 17, "complic": [17, 20], "navig": [17, 20], "most": [17, 19, 20], "viciou": 17, "layer": 17, "sens": [17, 18], "global": [17, 19], "perspect": [17, 20], "paragraph": 17, "hierarchi": [17, 18], "could": [17, 18, 20], "tempt": 17, "aris": 17, "now": 17, "demand": 17, "absurdli": 17, "pseudo": 17, "someth": [17, 18], "my_ent": 17, "yet": 17, "imagin": 17, "recondit": 17, "find_al": 17, "main_text": 17, "Not": 17, "dynam": [17, 18, 20], "ruin": 17, "tackl": 17, "propos": 17, "fairli": 17, "philosophi": 17, "hierarchis": 17, "fulli": 17, "horizont": 17, "lot": [17, 18], "readabl": [17, 20], "human": 17, "machin": [17, 20], "etre": 17, "clearli": 17, "overkil": 17, "offer": 17, "noth": [17, 20], "solv": 17, "renest": 17, "thing": [17, 18], "my_tc": 17, "redund": 17, "useless": 17, "concaten": [17, 20], "400": 17, "35mb": 17, "oppos": 17, "85mb": 17, "loss": 17, "transit": [17, 18], "computationnali": 17, "time_commentary_oper": 17, "commentary_typ": 17, "f": [17, 19], "start_tim": 17, "2f": 17, "findal": 17, "9": 17, "decim": 17, "94": 17, "version": 17, "customli": 17, "dealt": 17, "launch": 17, "hood": [17, 20], "cover": 17, "briefli": 17, "aim": [17, 20], "bring": 17, "solut": 17, "adjust": 17, "_inclusion_threshold": 17, "prove": 17, "robust": [17, 18], "cut": 17, "downward": 17, "intern": 17, "can_commentari": 17, "pretti": 17, "contributor": 18, "especi": 18, "student": 18, "facilit": 18, "collabor": 18, "mainten": 18, "introduction_to_cod": 18, "further": 18, "illustr": 18, "fundament": 18, "design": [18, 20], "codebas": 18, "voluntari": 18, "simplifi": 18, "reflect": [18, 20], "similar": 18, "situat": 18, "similarli": [18, 20], "across": 18, "someon": 18, "knowledg": 18, "anoth": 18, "rime": 18, "consist": 18, "conflict": [18, 20], "Be": 18, "compute_circle_area": 18, "radiu": 18, "pi": 18, "compute_circle_circumfer": 18, "circl": 18, "mycircleobject": 18, "unnecessarili": 18, "close": 18, "behav": [18, 20], "compute_area": 18, "get_area": 18, "relev": 18, "null": 18, "attributeerror": 18, "convent": 18, "intim": 18, "connect": 18, "dry": 18, "state": 18, "reus": 18, "duplic": 18, "simplic": [18, 20], "usag": 18, "likelihood": 18, "ever": 18, "hint": 18, "centralis": 18, "circle_arg": 18, "compute_text_len": 18, "compute_line_len": 18, "objet": 18, "specialis": 18, "loos": 18, "On": 18, "much": 18, "run_outputs_evaluation_and_convert_to_t": 18, "outputs_fil": 18, "some_output_related_paramet": 18, "table_styl": 18, "terribl": 18, "term": 18, "flexibl": 18, "whatev": 18, "futur": 18, "might": 18, "mayb": 18, "anymor": 18, "atom": 18, "action": 18, "never": 18, "think": 18, "independ": 18, "speak": 18, "run_outputs_evalu": 18, "convert_evaluation_to_t": 18, "constitut": 18, "backend": 18, "platform": 18, "fluid": [18, 20], "smoothli": 18, "littl": 18, "depend": [18, 20], "heavi": [18, 20], "certainli": 18, "isol": 18, "hamper": 18, "lazy_object": [18, 20], "lazy": 18, "lazy_properti": [18, 20], "__init__": [18, 20], "path_to_fil": 18, "imread": 18, "caus": 18, "possibli": 18, "parsimoni": 18, "rememb": 18, "kept": 18, "forgotten": 18, "del": 18, "lazy_prop_nam": 18, "doubt": 18, "programm": 18, "struggl": 18, "remain": 18, "paramount": 18, "prohibit": 18, "blatantli": 18, "clear": 18, "ag": 18, "bad": 18, "div": 18, "find_divisor": 18, "candid": 18, "toler": 18, "dir_": 18, "ground_truth": 18, "understood": 18, "context": 18, "comprehens": 18, "just": 18, "foreshadow": 18, "hi": 18, "lament": 18, "ala": 18, "announc": 18, "eloqu": 18, "less": 18, "comment": [18, 20], "peopl": 18, "upgrad": 18, "buffer": 18, "upon": 18, "hesit": 18, "shed": 18, "light": [18, 20], "reordered_lin": 18, "better": [18, 20], "lines_2": 18, "ambigu": 18, "obscur": 18, "boilerpl": 18, "dict_new": 18, "dict_new_2": 18, "tmp_": 18, "values_list": 18, "to_output": 18, "verb": 18, "compute_rectangle_area": 18, "mislead": 18, "fetch": 18, "get_rectangle_area": 18, "substant": 18, "rectangle_area_gett": 18, "except": [18, 20], "condit": [18, 20], "is_squar": 18, "smarter": 18, "smart": 18, "likewis": 18, "nativ": 18, "motiv": [18, 20], "oop": 18, "dedic": 18, "anyth": 18, "everywher": 18, "With": 18, "root": 19, "campbel": 19, "usual": [19, 20], "easilli": 19, "observ": 19, "comm_ocr_runs_rel_dir": 19, "comm_via_rel_path": 19, "1bm0b3_tess_fin": 19, "pdf": 19, "recognit": 19, "lace_correct": 19, "general_evalu": 19, "retrain": 19, "13p082_lace_bas": 19, "evaluation_fuzzi": 19, "13s0gr_ocrd_vanilla": 19, "1560he_ocrd_min": 19, "15o0a0_lace_base_cu31924087948174": 19, "2480ei_greek": 19, "english_porson_sophoclesplaysa05campgoog": 19, "28qmab_tess_bas": 19, "tess_eng_finetun": 19, "grc": 19, "tess_eng_grc": 19, "throughout": 19, "identifi": 19, "perfom": 19, "grasp": 20, "made": 20, "plain": 20, "ll": 20, "brief": 20, "explain": 20, "readm": 20, "md": 20, "webpag": 20, "interfac": 20, "queri": 20, "classic": 20, "analysi": 20, "meaning": 20, "aforement": 20, "orient": 20, "being": 20, "said": 20, "qualiti": 20, "grant": 20, "There": 20, "secondli": 20, "too": 20, "massiv": 20, "confus": 20, "natur": 20, "matter": 20, "view": 20, "commentary_importation_pipelin": 20, "unifi": 20, "divers": 20, "unsurprisingli": 20, "inde": 20, "ancestor": 20, "scheme": 20, "ocrregion": 20, "choic": 20, "slightli": 20, "explor": 20, "balanc": 20, "principl": 20, "maintan": 20, "nitti": 20, "gritti": 20, "enter": 20, "review": 20, "direct": 20, "inclus": 20, "textual": 20, "textcoontain": 20, "singular": 20, "plural": 20, "wherea": 20, "_get_children": 20, "_get_par": 20, "parent_typ": 20, "turn": 20, "liner": 20, "endswith": 20, "keep": 20, "swift": 20, "almost": 20}, "objects": {"": [[0, 0, 0, "-", "ajmc"]], "ajmc": [[1, 0, 0, "-", "commons"], [2, 0, 0, "-", "corpora"], [3, 0, 0, "-", "nlp"], [6, 0, 0, "-", "ocr"], [10, 0, 0, "-", "olr"], [13, 0, 0, "-", "text_processing"], [0, 0, 0, "-", "workbench"]], "ajmc.commons": [[1, 0, 0, "-", "arithmetic"], [1, 0, 0, "-", "docstrings"], [1, 0, 0, "-", "file_management"], [1, 0, 0, "-", "geometry"], [1, 0, 0, "-", "image"], [1, 0, 0, "-", "miscellaneous"], [1, 0, 0, "-", "unicode_utils"], [1, 0, 0, "-", "variables"]], "ajmc.commons.arithmetic": [[1, 1, 1, "", "are_intervals_within_intervals"], [1, 1, 1, "", "compute_interval_overlap"], [1, 1, 1, "", "is_interval_within_interval"], [1, 1, 1, "", "safe_divide"]], "ajmc.commons.docstrings": [[1, 1, 1, "", "docstring_formatter"]], "ajmc.commons.file_management": [[1, 1, 1, "", "check_ocr_gt_spreadsheet_conformity"], [1, 1, 1, "", "check_via_spreadsheet_conformity"], [1, 1, 1, "", "clean_all_ocr_runs_outputs_dirs"], [1, 1, 1, "", "data_sanity_check"], [1, 1, 1, "", "find_replace_in_all_comm_dirs"], [1, 1, 1, "", "get_62_based_datecode"], [1, 1, 1, "", "get_metadata_spreadsheet"], [1, 1, 1, "", "get_ocr_gt_spreadsheet"], [1, 1, 1, "", "get_olr_gt_spreadsheet"], [1, 1, 1, "", "int_to_x_based_code"], [1, 1, 1, "", "move_files_in_each_commentary_dir"], [1, 1, 1, "", "read_google_sheet"], [1, 1, 1, "", "walk_dirs"], [1, 1, 1, "", "walk_files"]], "ajmc.commons.geometry": [[1, 2, 1, "", "Shape"], [1, 1, 1, "", "adjust_bbox_to_included_contours"], [1, 1, 1, "", "are_bboxes_overlapping"], [1, 1, 1, "", "are_bboxes_overlapping_with_threshold"], [1, 1, 1, "", "compute_bbox_area"], [1, 1, 1, "", "compute_bbox_overlap_area"], [1, 1, 1, "", "get_bbox_from_points"], [1, 1, 1, "", "is_bbox_within_bbox"], [1, 1, 1, "", "is_bbox_within_bbox_with_threshold"], [1, 1, 1, "", "is_point_within_bbox"]], "ajmc.commons.geometry.Shape": [[1, 3, 1, "", "area"], [1, 3, 1, "", "bbox"], [1, 3, 1, "", "center"], [1, 4, 1, "", "from_center_w_h"], [1, 4, 1, "", "from_numpy_array"], [1, 4, 1, "", "from_xywh"], [1, 3, 1, "", "height"], [1, 3, 1, "", "width"], [1, 3, 1, "", "xywh"], [1, 3, 1, "", "xyxy"]], "ajmc.commons.image": [[1, 2, 1, "", "AjmcImage"], [1, 1, 1, "", "align_rgb_values"], [1, 1, 1, "", "binarize"], [1, 1, 1, "", "draw_box"], [1, 1, 1, "", "draw_contours"], [1, 1, 1, "", "draw_reading_order"], [1, 1, 1, "", "draw_textcontainers"], [1, 1, 1, "", "find_contours"], [1, 1, 1, "", "remove_artifacts_from_contours"], [1, 1, 1, "", "resize_image"], [1, 1, 1, "", "rgb_to_bgr"]], "ajmc.commons.image.AjmcImage": [[1, 3, 1, "", "contours"], [1, 4, 1, "", "crop"], [1, 3, 1, "", "height"], [1, 3, 1, "", "matrix"], [1, 4, 1, "", "show"], [1, 3, 1, "", "width"], [1, 4, 1, "", "write"]], "ajmc.commons.miscellaneous": [[1, 1, 1, "", "aligned_print"], [1, 1, 1, "", "get_custom_logger"], [1, 1, 1, "", "get_imports"], [1, 1, 1, "", "get_unique_elements"], [1, 1, 1, "", "log_to_file"], [1, 1, 1, "", "prefix_command_with_conda_env"], [1, 1, 1, "", "recursive_iterator"], [1, 1, 1, "", "split_list"], [1, 1, 1, "", "timer"], [1, 1, 1, "", "validate_json_schema"]], "ajmc.commons.unicode_utils": [[1, 1, 1, "", "chunk_string_by_charsets"], [1, 1, 1, "", "count_chars_by_charset"], [1, 1, 1, "", "count_chars_by_charset_nfd"], [1, 1, 1, "", "get_all_chars_from_range"], [1, 1, 1, "", "get_all_chars_from_ranges"], [1, 1, 1, "", "get_char_charset"], [1, 1, 1, "", "get_char_unicode_name"], [1, 1, 1, "", "harmonise_ligatures"], [1, 1, 1, "", "harmonise_miscellaneous_symbols"], [1, 1, 1, "", "harmonise_non_printable"], [1, 1, 1, "", "harmonise_punctuation"], [1, 1, 1, "", "harmonise_spaces"], [1, 1, 1, "", "harmonise_unicode"], [1, 1, 1, "", "is_charset_string"], [1, 1, 1, "", "is_charset_string_nfd"]], "ajmc.commons.variables": [[1, 1, 1, "", "get_comm_base_dir"], [1, 1, 1, "", "get_comm_canonical_default_path"], [1, 1, 1, "", "get_comm_canonical_dir"], [1, 1, 1, "", "get_comm_canonical_path_from_pattern"], [1, 1, 1, "", "get_comm_img_dir"], [1, 1, 1, "", "get_comm_lemlink_jsons_dir"], [1, 1, 1, "", "get_comm_lemlink_xmis_dir"], [1, 1, 1, "", "get_comm_ner_jsons_dir"], [1, 1, 1, "", "get_comm_ner_xmis_dir"], [1, 1, 1, "", "get_comm_ocr_gt_dir"], [1, 1, 1, "", "get_comm_ocr_gt_pairs_dir"], [1, 1, 1, "", "get_comm_ocr_outputs_dir"], [1, 1, 1, "", "get_comm_ocr_runs_dir"], [1, 1, 1, "", "get_comm_sections_path"], [1, 1, 1, "", "get_comm_via_path"]], "ajmc.corpora": [[2, 0, 0, "-", "bibliographic_records"], [2, 0, 0, "-", "cleaning_utils"], [2, 0, 0, "-", "corpora_classes"], [2, 0, 0, "-", "scraping_utils"], [2, 0, 0, "-", "variables"]], "ajmc.corpora.bibliographic_records": [[2, 2, 1, "", "DublinCoreRecord"], [2, 1, 1, "", "get_records_list"]], "ajmc.corpora.bibliographic_records.DublinCoreRecord": [[2, 4, 1, "", "creator"], [2, 4, 1, "", "description"], [2, 4, 1, "", "get_property_tag_text"], [2, 4, 1, "", "keywords"], [2, 4, 1, "", "keywords_string"], [2, 4, 1, "", "language"], [2, 4, 1, "", "publisher"], [2, 4, 1, "", "title"], [2, 4, 1, "", "whole_text"]], "ajmc.corpora.cleaning_utils": [[2, 1, 1, "", "basic_clean"], [2, 1, 1, "", "find_recurrent_lines"], [2, 1, 1, "", "harmonise_linebreaks"]], "ajmc.corpora.corpora_classes": [[2, 2, 1, "", "Corpus"], [2, 2, 1, "", "LogeionCorpus"], [2, 2, 1, "", "OGLCorpus"], [2, 2, 1, "", "PerseusLegacyCorpus"], [2, 2, 1, "", "PlainTextCorpus"], [2, 2, 1, "", "TeiCorpus"]], "ajmc.corpora.corpora_classes.Corpus": [[2, 4, 1, "", "auto_init"], [2, 4, 1, "", "data_dir"], [2, 4, 1, "", "files"], [2, 4, 1, "", "get_chunks"], [2, 4, 1, "", "get_documents"], [2, 4, 1, "", "get_lines"], [2, 4, 1, "", "get_plain_text"], [2, 4, 1, "", "get_regions"], [2, 4, 1, "", "get_words"], [2, 4, 1, "", "write_plain_text"]], "ajmc.corpora.corpora_classes.LogeionCorpus": [[2, 3, 1, "", "data_dir"], [2, 3, 1, "", "files"], [2, 4, 1, "", "get_lexica"], [2, 4, 1, "", "get_plain_text"]], "ajmc.corpora.corpora_classes.OGLCorpus": [[2, 3, 1, "", "data_dir"], [2, 3, 1, "", "files"]], "ajmc.corpora.corpora_classes.PerseusLegacyCorpus": [[2, 4, 1, "", "convert_soup_to_unicode"], [2, 3, 1, "", "data_dir"], [2, 3, 1, "", "files"], [2, 4, 1, "", "get_plain_text"], [2, 4, 1, "", "read_document"]], "ajmc.corpora.corpora_classes.PlainTextCorpus": [[2, 3, 1, "", "data_dir"], [2, 3, 1, "", "files"], [2, 4, 1, "", "get_plain_text"]], "ajmc.corpora.corpora_classes.TeiCorpus": [[2, 3, 1, "", "data_dir"], [2, 3, 1, "", "files"], [2, 4, 1, "", "get_plain_text"]], "ajmc.corpora.scraping_utils": [[2, 1, 1, "", "get_html"], [2, 1, 1, "", "oai_files_to_dataframe"], [2, 1, 1, "", "scrape_page"], [2, 1, 1, "", "scrape_resumptiontoken_oai"]], "ajmc.nlp": [[4, 0, 0, "-", "token_classification"]], "ajmc.nlp.token_classification": [[4, 0, 0, "-", "config"], [5, 0, 0, "-", "data_preparation"], [4, 0, 0, "-", "evaluation"], [4, 0, 0, "-", "model"], [4, 0, 0, "-", "pipeline"]], "ajmc.nlp.token_classification.config": [[4, 1, 1, "", "create_default_config"], [4, 1, 1, "", "parse_config_from_json"]], "ajmc.nlp.token_classification.data_preparation": [[5, 0, 0, "-", "hipe_iob"], [5, 0, 0, "-", "utils"]], "ajmc.nlp.token_classification.data_preparation.hipe_iob": [[5, 2, 1, "", "HipeDataset"], [5, 1, 1, "", "create_prediction_dataset"], [5, 1, 1, "", "prepare_datasets"]], "ajmc.nlp.token_classification.data_preparation.utils": [[5, 2, 1, "", "CustomDataset"], [5, 1, 1, "", "align_from_tokenized"], [5, 1, 1, "", "align_labels_to_tokenized"], [5, 1, 1, "", "align_to_tokenized"], [5, 1, 1, "", "manual_truncation"], [5, 1, 1, "", "nerify_labels"], [5, 1, 1, "", "sort_ner_labels"], [5, 1, 1, "", "write_predictions_to_tsv"]], "ajmc.nlp.token_classification.evaluation": [[4, 1, 1, "", "evaluate_dataset"], [4, 1, 1, "", "evaluate_hipe"], [4, 1, 1, "", "evaluate_iob_files"], [4, 1, 1, "", "seqeval_evaluation"], [4, 1, 1, "", "seqeval_to_df"]], "ajmc.nlp.token_classification.model": [[4, 1, 1, "", "predict"], [4, 1, 1, "", "predict_and_write_tsv"], [4, 1, 1, "", "predict_batches"], [4, 1, 1, "", "predict_dataset"]], "ajmc.nlp.token_classification.pipeline": [[4, 1, 1, "", "create_dirs"], [4, 1, 1, "", "main"], [4, 1, 1, "", "set_seed"], [4, 1, 1, "", "train"]], "ajmc.ocr": [[6, 0, 0, "-", "config"], [6, 0, 0, "-", "evaluation"], [6, 0, 0, "-", "font_utils"], [7, 0, 0, "-", "preprocessing"], [8, 0, 0, "-", "pytorch"], [9, 0, 0, "-", "tesseract"], [6, 0, 0, "-", "utils"], [6, 0, 0, "-", "variables"]], "ajmc.ocr.config": [[6, 1, 1, "", "config_to_tesstrain_config"], [6, 1, 1, "", "get_all_configs"], [6, 1, 1, "", "get_config_reader"], [6, 1, 1, "", "row_to_dataset_config"], [6, 1, 1, "", "row_to_experiment_config"], [6, 1, 1, "", "row_to_model_config"]], "ajmc.ocr.evaluation": [[6, 1, 1, "", "bag_of_word_evaluation"], [6, 1, 1, "", "commentary_evaluation"], [6, 1, 1, "", "coord_based_page_evaluation"], [6, 1, 1, "", "count_errors_by_charset"], [6, 1, 1, "", "directory_evaluation"], [6, 1, 1, "", "initialize_soup"], [6, 1, 1, "", "insert_text_in_soup"], [6, 1, 1, "", "line_based_evaluation"], [6, 1, 1, "", "record_editops"], [6, 1, 1, "", "simple_coordinates_based_evaluation"], [6, 1, 1, "", "write_editops_record"], [6, 1, 1, "", "write_error_counts"]], "ajmc.ocr.font_utils": [[6, 2, 1, "", "Font"], [6, 1, 1, "", "walk_through_font_dir"]], "ajmc.ocr.font_utils.Font": [[6, 3, 1, "", "font_variants"], [6, 3, 1, "", "ft_collection"], [6, 3, 1, "", "ft_font"], [6, 4, 1, "", "get_font_variant_index"], [6, 4, 1, "", "get_font_variant_path"], [6, 4, 1, "", "get_missing_glyphs"], [6, 4, 1, "", "has_charset_glyphs"], [6, 4, 1, "", "has_glyph"], [6, 4, 1, "", "has_glyphs"], [6, 3, 1, "", "name"], [6, 3, 1, "", "pil_font"], [6, 4, 1, "", "set_size"]], "ajmc.ocr.preprocessing": [[7, 0, 0, "-", "data_augmentation"], [7, 0, 0, "-", "data_preparation"], [7, 0, 0, "-", "get_source_datasets"], [7, 0, 0, "-", "pagify_dataset"]], "ajmc.ocr.preprocessing.data_augmentation": [[7, 1, 1, "", "erode"], [7, 1, 1, "", "main"], [7, 1, 1, "", "random_degrade"], [7, 1, 1, "", "random_distort"], [7, 1, 1, "", "write_augmented_line"]], "ajmc.ocr.preprocessing.data_preparation": [[7, 1, 1, "", "gather_and_transform_dataset"], [7, 1, 1, "", "import_dataset_metadata"], [7, 1, 1, "", "make_dataset"], [7, 1, 1, "", "make_datasets"], [7, 1, 1, "", "safe_check_dataset"], [7, 1, 1, "", "sample_dataset_metadata"], [7, 1, 1, "", "split_root_dataset_metadata"], [7, 1, 1, "", "write_dataset_metadata"]], "ajmc.ocr.preprocessing.get_source_datasets": [[7, 1, 1, "", "basic_text_cleaning"], [7, 1, 1, "", "clean_source_dataset"], [7, 1, 1, "", "compute_dataset_metadata"], [7, 1, 1, "", "controle_overwrite"], [7, 1, 1, "", "make_clean_ajmc_dataset"], [7, 1, 1, "", "make_clean_archiscribe_dataset"], [7, 1, 1, "", "make_clean_gt4histocr_dataset"], [7, 1, 1, "", "make_clean_pogretra_dataset"], [7, 1, 1, "", "make_clean_porta_fontium_dataset"], [7, 1, 1, "", "make_clean_source_datasets"], [7, 1, 1, "", "make_clean_synthetic_dataset"], [7, 1, 1, "", "regularize_dataset"]], "ajmc.ocr.preprocessing.pagify_dataset": [[7, 1, 1, "", "create_blank_image"], [7, 1, 1, "", "get_commentary_image_dimension"], [7, 1, 1, "", "insert_line"], [7, 1, 1, "", "insert_lines"], [7, 1, 1, "", "pagify_dataset"]], "ajmc.ocr.pytorch": [[8, 0, 0, "-", "config"], [8, 0, 0, "-", "ctc_decoder_torch"], [8, 0, 0, "-", "data_generation"], [8, 0, 0, "-", "data_processing"], [8, 0, 0, "-", "datasets"], [8, 0, 0, "-", "model"], [8, 0, 0, "-", "train_parallel"]], "ajmc.ocr.pytorch.config": [[8, 1, 1, "", "get_config"]], "ajmc.ocr.pytorch.ctc_decoder_torch": [[8, 2, 1, "", "BeamCTCDecoder"], [8, 2, 1, "", "Decoder"], [8, 2, 1, "", "GreedyDecoder"]], "ajmc.ocr.pytorch.ctc_decoder_torch.BeamCTCDecoder": [[8, 4, 1, "", "convert_tensor"], [8, 4, 1, "", "convert_to_strings"], [8, 4, 1, "", "decode"]], "ajmc.ocr.pytorch.ctc_decoder_torch.Decoder": [[8, 4, 1, "", "decode"]], "ajmc.ocr.pytorch.ctc_decoder_torch.GreedyDecoder": [[8, 4, 1, "", "convert_to_strings"], [8, 4, 1, "", "decode"], [8, 4, 1, "", "process_string"]], "ajmc.ocr.pytorch.data_generation": [[8, 1, 1, "", "array2pil"], [8, 1, 1, "", "check_file_count"], [8, 1, 1, "", "create_sample_dir"], [8, 1, 1, "", "degrade_line"], [8, 1, 1, "", "distort_line"], [8, 1, 1, "", "do_all_purpose_fonts"], [8, 1, 1, "", "do_capitals"], [8, 1, 1, "", "do_gibberish"], [8, 1, 1, "", "do_greek_fonts"], [8, 1, 1, "", "do_latin_fonts"], [8, 1, 1, "", "do_mixed_fonts"], [8, 1, 1, "", "draw_textline"], [8, 1, 1, "", "get_textline_font_variants"], [8, 1, 1, "", "get_textline_generators"], [8, 1, 1, "", "inner_loop"], [8, 1, 1, "", "pad_image"], [8, 1, 1, "", "pil2array"], [8, 1, 1, "", "textline_generator"]], "ajmc.ocr.pytorch.data_processing": [[8, 2, 1, "", "OcrBatch"], [8, 2, 1, "", "OcrIterDataset"], [8, 2, 1, "", "OcrLine"], [8, 1, 1, "", "chunk_img_tensor"], [8, 1, 1, "", "compute_n_chunks"], [8, 1, 1, "", "compute_padding"], [8, 1, 1, "", "crop_image_tensor_to_nonzero"], [8, 1, 1, "", "get_custom_dataloader"], [8, 1, 1, "", "invert_image_tensor"], [8, 1, 1, "", "normalize_image_tensor"], [8, 1, 1, "", "prepare_img"], [8, 1, 1, "", "recompose_batched_chunks"], [8, 1, 1, "", "recompose_chunks"]], "ajmc.ocr.pytorch.data_processing.OcrBatch": [[8, 3, 1, "", "chunks"], [8, 3, 1, "", "chunks_to_img_mapping"], [8, 3, 1, "", "img_widths"], [8, 3, 1, "", "text_lengths"], [8, 3, 1, "", "texts"], [8, 3, 1, "", "texts_tensor"]], "ajmc.ocr.pytorch.data_processing.OcrIterDataset": [[8, 4, 1, "", "distribute"]], "ajmc.ocr.pytorch.datasets": [[8, 2, 1, "", "OcrEvalDataset"], [8, 2, 1, "", "OcrTorchDataset"], [8, 2, 1, "", "OcrTrainingDataset"]], "ajmc.ocr.pytorch.datasets.OcrTorchDataset": [[8, 3, 1, "", "classes_to_indices"], [8, 3, 1, "", "indices_to_classes"]], "ajmc.ocr.pytorch.model": [[8, 2, 1, "", "DenseNetBackbone"], [8, 2, 1, "", "OcrTorchModel"]], "ajmc.ocr.pytorch.model.DenseNetBackbone": [[8, 4, 1, "", "forward"], [8, 4, 1, "", "from_config"]], "ajmc.ocr.pytorch.model.OcrTorchModel": [[8, 4, 1, "", "forward"], [8, 4, 1, "", "predict"]], "ajmc.ocr.pytorch.train_parallel": [[8, 2, 1, "", "OcrModelTrainer"], [8, 1, 1, "", "ddp_setup"], [8, 1, 1, "", "main"]], "ajmc.ocr.pytorch.train_parallel.OcrModelTrainer": [[8, 4, 1, "", "train"]], "ajmc.ocr.tesseract": [[9, 0, 0, "-", "dictionaries"], [9, 0, 0, "-", "experiments"], [9, 0, 0, "-", "models"], [9, 0, 0, "-", "pipeline"], [9, 0, 0, "-", "tesseract_utils"]], "ajmc.ocr.tesseract.dictionaries": [[9, 1, 1, "", "change_traineddata_wordlist"], [9, 1, 1, "", "create_traineddata_with_wordlist"], [9, 1, 1, "", "get_mr_abbr_wordlist"], [9, 1, 1, "", "get_or_create_wordlist_path"], [9, 1, 1, "", "get_traineddata_wordlist"], [9, 1, 1, "", "merge_wordlists"], [9, 1, 1, "", "write_all_wordlists"], [9, 1, 1, "", "write_combined_wordlists"], [9, 1, 1, "", "write_mr_abbr_wordlist"], [9, 1, 1, "", "write_unpacked_traineddata"]], "ajmc.ocr.tesseract.experiments": [[9, 1, 1, "", "make_experiment"], [9, 1, 1, "", "make_experiment_dir"], [9, 1, 1, "", "make_experiments"], [9, 1, 1, "", "make_general_results_table"]], "ajmc.ocr.tesseract.models": [[9, 1, 1, "", "get_training_command"], [9, 1, 1, "", "make_model"], [9, 1, 1, "", "make_model_dirs"], [9, 1, 1, "", "make_models"], [9, 1, 1, "", "run"], [9, 1, 1, "", "train"]], "ajmc.ocr.tesseract.tesseract_utils": [[9, 1, 1, "", "create_general_table"], [9, 1, 1, "", "reformulate_output_dir"], [9, 1, 1, "", "run_tess_command"]], "ajmc.ocr.utils": [[6, 1, 1, "", "get_kraken_command"], [6, 1, 1, "", "guess_ocr_format"]], "ajmc.ocr.variables": [[6, 1, 1, "", "get_dataset_config_path"], [6, 1, 1, "", "get_dataset_dir"], [6, 1, 1, "", "get_dataset_metadata_path"], [6, 1, 1, "", "get_experiment_config_path"], [6, 1, 1, "", "get_experiment_dir"], [6, 1, 1, "", "get_experiment_model_outputs_dir"], [6, 1, 1, "", "get_experiment_models_dir"], [6, 1, 1, "", "get_model_config_path"], [6, 1, 1, "", "get_model_dir"], [6, 1, 1, "", "get_model_train_dir"], [6, 1, 1, "", "get_source_dataset_dir"], [6, 1, 1, "", "get_traineddata_dir"], [6, 1, 1, "", "get_traineddata_unpacked_dir"], [6, 1, 1, "", "get_trainneddata_path"], [6, 1, 1, "", "get_wordlist_path"]], "ajmc.olr": [[10, 0, 0, "-", "automatic_region_detection"], [11, 0, 0, "-", "layoutlm"], [10, 0, 0, "-", "map_utils"], [10, 0, 0, "-", "utils"], [12, 0, 0, "-", "yolo"]], "ajmc.olr.automatic_region_detection": [[10, 1, 1, "", "correct_csv_manually"], [10, 1, 1, "", "detect_regions"], [10, 1, 1, "", "main"], [10, 1, 1, "", "write_csv_manually"]], "ajmc.olr.layoutlm": [[11, 0, 0, "-", "draw"], [11, 0, 0, "-", "layoutlm"]], "ajmc.olr.layoutlm.draw": [[11, 1, 1, "", "draw_caption"], [11, 1, 1, "", "draw_page_labels"]], "ajmc.olr.layoutlm.layoutlm": [[11, 1, 1, "", "align_predicted_page"], [11, 1, 1, "", "create_olr_config"], [11, 1, 1, "", "draw_pages"], [11, 1, 1, "", "get_data_dict_pages"], [11, 1, 1, "", "main"], [11, 1, 1, "", "normalize_bounding_box"], [11, 1, 1, "", "page_to_layoutlm_encodings"], [11, 1, 1, "", "prepare_data"]], "ajmc.olr.map_utils": [[10, 1, 1, "", "initialize_general_results"], [10, 1, 1, "", "update_general_results"]], "ajmc.olr.utils": [[10, 1, 1, "", "get_olr_region_counts"], [10, 1, 1, "", "get_olr_splits_page_ids"], [10, 1, 1, "", "get_page_region_dicts_from_via"], [10, 1, 1, "", "select_page_regions_by_types"], [10, 1, 1, "", "sort_to_reading_order"]], "ajmc.olr.yolo": [[12, 0, 0, "-", "utils"]], "ajmc.olr.yolo.utils": [[12, 1, 1, "", "parse_yolo_txt"], [12, 1, 1, "", "parse_yolo_txt_line"]], "ajmc.text_processing": [[13, 0, 0, "-", "canonical_classes"], [13, 0, 0, "-", "cas_utils"], [13, 0, 0, "-", "generic_classes"], [13, 0, 0, "-", "markup_processing"], [13, 0, 0, "-", "ocr_classes"]], "ajmc.text_processing.canonical_classes": [[13, 2, 1, "", "CanonicalAnnotation"], [13, 2, 1, "", "CanonicalCommentary"], [13, 2, 1, "", "CanonicalEntity"], [13, 2, 1, "", "CanonicalHyphenation"], [13, 2, 1, "", "CanonicalLine"], [13, 2, 1, "", "CanonicalPage"], [13, 2, 1, "", "CanonicalRegion"], [13, 2, 1, "", "CanonicalSection"], [13, 2, 1, "", "CanonicalSentence"], [13, 2, 1, "", "CanonicalTextContainer"], [13, 2, 1, "", "CanonicalWord"], [13, 1, 1, "", "get_tc_type_class"]], "ajmc.text_processing.canonical_classes.CanonicalAnnotation": [[13, 4, 1, "", "bbox"], [13, 4, 1, "", "get_text_window"], [13, 4, 1, "", "text"]], "ajmc.text_processing.canonical_classes.CanonicalCommentary": [[13, 4, 1, "", "from_json"], [13, 3, 1, "", "ocr_gt_pages"], [13, 4, 1, "", "to_alto"], [13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalEntity": [[13, 4, 1, "", "bbox"], [13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalHyphenation": [[13, 4, 1, "", "bbox"], [13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalLine": [[13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalPage": [[13, 3, 1, "", "image"], [13, 4, 1, "", "to_alto"], [13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalRegion": [[13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalSection": [[13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalSentence": [[13, 4, 1, "", "bbox"], [13, 4, 1, "", "to_json"]], "ajmc.text_processing.canonical_classes.CanonicalTextContainer": [[13, 3, 1, "", "bbox"], [13, 3, 1, "", "id"], [13, 3, 1, "", "image"], [13, 3, 1, "", "index"], [13, 4, 1, "", "to_json"], [13, 3, 1, "", "word_range"]], "ajmc.text_processing.canonical_classes.CanonicalWord": [[13, 4, 1, "", "to_json"], [13, 3, 1, "", "word_range"]], "ajmc.text_processing.cas_utils": [[13, 1, 1, "", "align_cas_annotation"], [13, 1, 1, "", "basic_rebuild"], [13, 1, 1, "", "compute_image_links"], [13, 1, 1, "", "export_commentary_to_xmis"], [13, 1, 1, "", "get_cas"], [13, 1, 1, "", "get_iiif_url"], [13, 1, 1, "", "import_page_cas"], [13, 1, 1, "", "import_page_rebuild"], [13, 1, 1, "", "rebuild_to_xmi"], [13, 1, 1, "", "safe_import_page_annotations"]], "ajmc.text_processing.generic_classes": [[13, 2, 1, "", "Commentary"], [13, 2, 1, "", "Page"], [13, 2, 1, "", "TextContainer"]], "ajmc.text_processing.generic_classes.Commentary": [[13, 4, 1, "", "export_ocr_gt_file_pairs"], [13, 4, 1, "", "get_page"], [13, 4, 1, "", "get_section"], [13, 3, 1, "", "olr_gt_pages"]], "ajmc.text_processing.generic_classes.Page": [[13, 4, 1, "", "draw_textcontainers"], [13, 3, 1, "", "number"]], "ajmc.text_processing.generic_classes.TextContainer": [[13, 3, 1, "", "children"], [13, 3, 1, "", "parents"], [13, 3, 1, "", "text"], [13, 3, 1, "", "type"]], "ajmc.text_processing.markup_processing": [[13, 1, 1, "", "find_all_elements"], [13, 1, 1, "", "find_all_krakenhocr_elements"], [13, 1, 1, "", "find_all_pagexml_elements"], [13, 1, 1, "", "find_all_tesshocr_elements"], [13, 1, 1, "", "get_element_bbox"], [13, 1, 1, "", "get_element_text"], [13, 1, 1, "", "get_hocr_element_bbox"], [13, 1, 1, "", "get_pagexml_element_bbox"]], "ajmc.text_processing.ocr_classes": [[13, 2, 1, "", "OcrCommentary"], [13, 2, 1, "", "OcrLine"], [13, 2, 1, "", "OcrPage"], [13, 2, 1, "", "OcrTextContainer"], [13, 2, 1, "", "OcrWord"], [13, 2, 1, "", "OlrRegion"], [13, 2, 1, "", "RawAnnotation"], [13, 2, 1, "", "RawEntity"], [13, 2, 1, "", "RawHyphenation"], [13, 2, 1, "", "RawSection"], [13, 2, 1, "", "RawSentence"]], "ajmc.text_processing.ocr_classes.OcrCommentary": [[13, 4, 1, "", "from_ajmc_data"], [13, 3, 1, "", "images"], [13, 3, 1, "", "ocr_gt_page_ids"], [13, 3, 1, "", "ocr_gt_pages"], [13, 4, 1, "", "reset"], [13, 4, 1, "", "to_canonical"], [13, 3, 1, "", "via_project"]], "ajmc.text_processing.ocr_classes.OcrPage": [[13, 3, 1, "", "bbox"], [13, 4, 1, "", "from_ajmc_data"], [13, 3, 1, "", "image"], [13, 3, 1, "", "markup"], [13, 3, 1, "", "ocr_format"], [13, 4, 1, "", "optimise"], [13, 4, 1, "", "reset"], [13, 4, 1, "", "to_inception_dict"], [13, 4, 1, "", "to_inception_json"]], "ajmc.text_processing.ocr_classes.OcrTextContainer": [[13, 4, 1, "", "adjust_bbox"], [13, 3, 1, "", "bbox"], [13, 3, 1, "", "image"], [13, 3, 1, "", "ocr_format"], [13, 3, 1, "", "text"]], "ajmc.text_processing.ocr_classes.OcrWord": [[13, 4, 1, "", "adjust_bbox"], [13, 3, 1, "", "text"]], "ajmc.text_processing.ocr_classes.OlrRegion": [[13, 4, 1, "", "from_via"]], "ajmc.text_processing.ocr_classes.RawEntity": [[13, 4, 1, "", "from_cas_annotation"]], "ajmc.text_processing.ocr_classes.RawHyphenation": [[13, 4, 1, "", "from_cas_annotation"]], "ajmc.text_processing.ocr_classes.RawSentence": [[13, 4, 1, "", "from_cas_annotation"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"]}, "titleterms": {"ajmc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [0, 3, 4, 6, 10], "submodul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "workbench": 0, "modul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "common": [1, 20], "arithmet": 1, "docstr": 1, "file_manag": 1, "geometri": 1, "imag": 1, "miscellan": 1, "unicode_util": 1, "variabl": [1, 2, 6], "corpora": 2, "bibliographic_record": 2, "cleaning_util": 2, "corpora_class": 2, "scraping_util": 2, "nlp": [3, 4, 5], "token_classif": [4, 5], "config": [4, 6, 8], "evalu": [4, 6], "model": [4, 8, 9], "pipelin": [4, 9, 17], "data_prepar": [5, 7], "hipe_iob": 5, "util": [5, 6, 10, 12], "ocr": [6, 7, 8, 9, 17, 19], "font_util": 6, "preprocess": 7, "data_augment": 7, "get_source_dataset": 7, "pagify_dataset": 7, "pytorch": 8, "ctc_decoder_torch": 8, "data_gener": 8, "data_process": 8, "dataset": 8, "train_parallel": 8, "tesseract": 9, "dictionari": 9, "experi": 9, "usag": 9, "tesseract_util": 9, "olr": [10, 11, 12], "automatic_region_detect": 10, "map_util": 10, "layoutlm": 11, "draw": 11, "yolo": 12, "text_process": [13, 20], "canonical_class": 13, "cas_util": 13, "generic_class": 13, "markup_process": 13, "ocr_class": 13, "welcom": 14, "": 14, "document": 14, "content": 14, "introduct": 14, "contribut": [14, 18], "indic": 14, "tabl": 14, "basic": 16, "function": 16, "navig": 16, "through": 16, "data": 16, "creat": [16, 17], "canon": [16, 17], "commentari": [16, 17, 19], "The": [16, 17, 18, 19, 20], "main": 16, "canonicalcommentari": [16, 17], "other": [16, 18], "text": 16, "contain": 16, "import": 17, "an": 17, "ocrcommetari": 17, "why": 17, "should": [17, 18], "one": 17, "bother": 17, "vagari": 17, "weak": 17, "xml": 17, "format": 17, "advantag": 17, "post": 17, "process": 17, "output": 17, "export": 17, "json": 17, "guidelin": 18, "gener": 18, "principl": 18, "code": [18, 20], "systemat": 18, "definit": 18, "exampl": 18, "central": 18, "effici": 18, "easili": 18, "readabl": 18, "specif": 18, "rule": 18, "understand": [19, 20], "directori": [19, 20], "structur": 19, "base_dir": 19, "run": 19, "id": 19, "goal": 20, "librari": 20, "from": 20}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"ajmc package": [[0, "module-ajmc"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"], [4, "subpackages"], [6, "subpackages"], [10, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "ajmc.workbench module": [[0, "module-ajmc.workbench"]], "ajmc.commons package": [[1, "module-ajmc.commons"]], "ajmc.commons.arithmetic module": [[1, "module-ajmc.commons.arithmetic"]], "ajmc.commons.docstrings module": [[1, "module-ajmc.commons.docstrings"]], "ajmc.commons.file_management module": [[1, "module-ajmc.commons.file_management"]], "ajmc.commons.geometry module": [[1, "module-ajmc.commons.geometry"]], "ajmc.commons.image module": [[1, "module-ajmc.commons.image"]], "ajmc.commons.miscellaneous module": [[1, "module-ajmc.commons.miscellaneous"]], "ajmc.commons.unicode_utils module": [[1, "module-ajmc.commons.unicode_utils"]], "ajmc.commons.variables module": [[1, "module-ajmc.commons.variables"]], "ajmc.corpora package": [[2, "module-ajmc.corpora"]], "ajmc.corpora.bibliographic_records module": [[2, "module-ajmc.corpora.bibliographic_records"]], "ajmc.corpora.cleaning_utils module": [[2, "module-ajmc.corpora.cleaning_utils"]], "ajmc.corpora.corpora_classes module": [[2, "module-ajmc.corpora.corpora_classes"]], "ajmc.corpora.scraping_utils module": [[2, "module-ajmc.corpora.scraping_utils"]], "ajmc.corpora.variables module": [[2, "module-ajmc.corpora.variables"]], "ajmc.nlp package": [[3, "module-ajmc.nlp"]], "ajmc.nlp.token_classification package": [[4, "module-ajmc.nlp.token_classification"]], "ajmc.nlp.token_classification.config module": [[4, "module-ajmc.nlp.token_classification.config"]], "ajmc.nlp.token_classification.evaluation module": [[4, "module-ajmc.nlp.token_classification.evaluation"]], "ajmc.nlp.token_classification.model module": [[4, "module-ajmc.nlp.token_classification.model"]], "ajmc.nlp.token_classification.pipeline module": [[4, "module-ajmc.nlp.token_classification.pipeline"]], "ajmc.nlp.token_classification.data_preparation package": [[5, "module-ajmc.nlp.token_classification.data_preparation"]], "ajmc.nlp.token_classification.data_preparation.hipe_iob module": [[5, "module-ajmc.nlp.token_classification.data_preparation.hipe_iob"]], "ajmc.nlp.token_classification.data_preparation.utils module": [[5, "module-ajmc.nlp.token_classification.data_preparation.utils"]], "ajmc.ocr package": [[6, "module-ajmc.ocr"]], "ajmc.ocr.config module": [[6, "module-ajmc.ocr.config"]], "ajmc.ocr.evaluation module": [[6, "module-ajmc.ocr.evaluation"]], "ajmc.ocr.font_utils module": [[6, "module-ajmc.ocr.font_utils"]], "ajmc.ocr.utils module": [[6, "module-ajmc.ocr.utils"]], "ajmc.ocr.variables module": [[6, "module-ajmc.ocr.variables"]], "ajmc.ocr.preprocessing package": [[7, "module-ajmc.ocr.preprocessing"]], "ajmc.ocr.preprocessing.data_augmentation module": [[7, "module-ajmc.ocr.preprocessing.data_augmentation"]], "ajmc.ocr.preprocessing.data_preparation module": [[7, "module-ajmc.ocr.preprocessing.data_preparation"]], "ajmc.ocr.preprocessing.get_source_datasets module": [[7, "module-ajmc.ocr.preprocessing.get_source_datasets"]], "ajmc.ocr.preprocessing.pagify_dataset module": [[7, "module-ajmc.ocr.preprocessing.pagify_dataset"]], "ajmc.ocr.pytorch package": [[8, "module-ajmc.ocr.pytorch"]], "ajmc.ocr.pytorch.config module": [[8, "module-ajmc.ocr.pytorch.config"]], "ajmc.ocr.pytorch.ctc_decoder_torch module": [[8, "module-ajmc.ocr.pytorch.ctc_decoder_torch"]], "ajmc.ocr.pytorch.data_generation module": [[8, "module-ajmc.ocr.pytorch.data_generation"]], "ajmc.ocr.pytorch.data_processing module": [[8, "module-ajmc.ocr.pytorch.data_processing"]], "ajmc.ocr.pytorch.datasets module": [[8, "module-ajmc.ocr.pytorch.datasets"]], "ajmc.ocr.pytorch.model module": [[8, "module-ajmc.ocr.pytorch.model"]], "ajmc.ocr.pytorch.train_parallel module": [[8, "module-ajmc.ocr.pytorch.train_parallel"]], "ajmc.ocr.tesseract package": [[9, "module-ajmc.ocr.tesseract"]], "ajmc.ocr.tesseract.dictionaries module": [[9, "module-ajmc.ocr.tesseract.dictionaries"]], "ajmc.ocr.tesseract.experiments module": [[9, "module-ajmc.ocr.tesseract.experiments"]], "ajmc.ocr.tesseract.models module": [[9, "module-ajmc.ocr.tesseract.models"]], "ajmc.ocr.tesseract.pipeline module": [[9, "module-ajmc.ocr.tesseract.pipeline"]], "Usage:": [[9, null]], "ajmc.ocr.tesseract.tesseract_utils module": [[9, "module-ajmc.ocr.tesseract.tesseract_utils"]], "ajmc.olr package": [[10, "module-ajmc.olr"]], "ajmc.olr.automatic_region_detection module": [[10, "module-ajmc.olr.automatic_region_detection"]], "ajmc.olr.map_utils module": [[10, "module-ajmc.olr.map_utils"]], "ajmc.olr.utils module": [[10, "module-ajmc.olr.utils"]], "ajmc.olr.layoutlm package": [[11, "module-ajmc.olr.layoutlm"]], "ajmc.olr.layoutlm.draw module": [[11, "module-ajmc.olr.layoutlm.draw"]], "ajmc.olr.layoutlm.layoutlm module": [[11, "module-ajmc.olr.layoutlm.layoutlm"]], "ajmc.olr.yolo package": [[12, "module-ajmc.olr.yolo"]], "ajmc.olr.yolo.utils module": [[12, "module-ajmc.olr.yolo.utils"]], "ajmc.text_processing package": [[13, "module-ajmc.text_processing"]], "ajmc.text_processing.canonical_classes module": [[13, "module-ajmc.text_processing.canonical_classes"]], "ajmc.text_processing.cas_utils module": [[13, "module-ajmc.text_processing.cas_utils"]], "ajmc.text_processing.generic_classes module": [[13, "module-ajmc.text_processing.generic_classes"]], "ajmc.text_processing.markup_processing module": [[13, "module-ajmc.text_processing.markup_processing"]], "ajmc.text_processing.ocr_classes module": [[13, "module-ajmc.text_processing.ocr_classes"]], "Welcome to ajmc\u2019s documentation!": [[14, "welcome-to-ajmc-s-documentation"]], "Contents:": [[14, null]], "Introduction:": [[14, null]], "Contributing:": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]], "ajmc": [[15, "ajmc"]], "Basic functionalities": [[16, "Basic-functionalities"]], "Navigate through the data": [[16, "Navigate-through-the-data"]], "Creating a canonical commentary": [[16, "Creating-a-canonical-commentary"]], "The main functionalities of a CanonicalCommentary": [[16, "The-main-functionalities-of-a-CanonicalCommentary"]], "Other text containers": [[16, "Other-text-containers"]], "Commentary importation pipeline": [[17, "Commentary-importation-pipeline"]], "Creating an OcrCommetary.": [[17, "Creating-an-OcrCommetary."]], "Why should one bother creating CanonicalCommentarys ?": [[17, "Why-should-one-bother-creating-CanonicalCommentarys-?"]], "The vagaries of OCR": [[17, "The-vagaries-of-OCR"]], "The weakness of xml formats": [[17, "The-weakness-of-xml-formats"]], "The advantages of the canonical format": [[17, "The-advantages-of-the-canonical-format"]], "Post-processing OCR outputs": [[17, "Post-processing-OCR-outputs"]], "Exporting canonical commentaries to json": [[17, "Exporting-canonical-commentaries-to-json"]], "Contributing guidelines": [[18, "contributing-guidelines"]], "General principles": [[18, "general-principles"]], "The code should be systematic": [[18, "the-code-should-be-systematic"]], "Definition": [[18, "definition"], [18, "id1"], [18, "id3"], [18, "id5"]], "Examples": [[18, "examples"], [18, "id2"], [18, "id4"], [18, "id6"]], "The code should be centralized": [[18, "the-code-should-be-centralized"]], "The code should be efficient": [[18, "the-code-should-be-efficient"]], "The code should be easily readable": [[18, "the-code-should-be-easily-readable"]], "Other specific rules": [[18, "other-specific-rules"]], "Understanding the ajmc directory structure.": [[19, "Understanding-the-ajmc-directory-structure."]], "The base_dir": [[19, "The-base_dir"]], "Commentary directories structure": [[19, "Commentary-directories-structure"]], "OCR run ids": [[19, "OCR-run-ids"]], "Understanding the goal of the library": [[20, "Understanding-the-goal-of-the-library"]], "From goal to code": [[20, "From-goal-to-code"]], "The commons directory": [[20, "The-commons-directory"]], "The text_processing directory": [[20, "The-text_processing-directory"]]}, "indexentries": {"ajmc": [[0, "module-ajmc"]], "ajmc.workbench": [[0, "module-ajmc.workbench"]], "module": [[0, "module-ajmc"], [0, "module-ajmc.workbench"], [1, "module-ajmc.commons"], [1, "module-ajmc.commons.arithmetic"], [1, "module-ajmc.commons.docstrings"], [1, "module-ajmc.commons.file_management"], [1, "module-ajmc.commons.geometry"], [1, "module-ajmc.commons.image"], [1, "module-ajmc.commons.miscellaneous"], [1, "module-ajmc.commons.unicode_utils"], [1, "module-ajmc.commons.variables"], [2, "module-ajmc.corpora"], [2, "module-ajmc.corpora.bibliographic_records"], [2, "module-ajmc.corpora.cleaning_utils"], [2, "module-ajmc.corpora.corpora_classes"], [2, "module-ajmc.corpora.scraping_utils"], [2, "module-ajmc.corpora.variables"], [3, "module-ajmc.nlp"], [4, "module-ajmc.nlp.token_classification"], [4, "module-ajmc.nlp.token_classification.config"], [4, "module-ajmc.nlp.token_classification.evaluation"], [4, "module-ajmc.nlp.token_classification.model"], [4, "module-ajmc.nlp.token_classification.pipeline"], [5, "module-ajmc.nlp.token_classification.data_preparation"], [5, "module-ajmc.nlp.token_classification.data_preparation.hipe_iob"], [5, "module-ajmc.nlp.token_classification.data_preparation.utils"], [6, "module-ajmc.ocr"], [6, "module-ajmc.ocr.config"], [6, "module-ajmc.ocr.evaluation"], [6, "module-ajmc.ocr.font_utils"], [6, "module-ajmc.ocr.utils"], [6, "module-ajmc.ocr.variables"], [7, "module-ajmc.ocr.preprocessing"], [7, "module-ajmc.ocr.preprocessing.data_augmentation"], [7, "module-ajmc.ocr.preprocessing.data_preparation"], [7, "module-ajmc.ocr.preprocessing.get_source_datasets"], [7, "module-ajmc.ocr.preprocessing.pagify_dataset"], [8, "module-ajmc.ocr.pytorch"], [8, "module-ajmc.ocr.pytorch.config"], [8, "module-ajmc.ocr.pytorch.ctc_decoder_torch"], [8, "module-ajmc.ocr.pytorch.data_generation"], [8, "module-ajmc.ocr.pytorch.data_processing"], [8, "module-ajmc.ocr.pytorch.datasets"], [8, "module-ajmc.ocr.pytorch.model"], [8, "module-ajmc.ocr.pytorch.train_parallel"], [9, "module-ajmc.ocr.tesseract"], [9, "module-ajmc.ocr.tesseract.dictionaries"], [9, "module-ajmc.ocr.tesseract.experiments"], [9, "module-ajmc.ocr.tesseract.models"], [9, "module-ajmc.ocr.tesseract.pipeline"], [9, "module-ajmc.ocr.tesseract.tesseract_utils"], [10, "module-ajmc.olr"], [10, "module-ajmc.olr.automatic_region_detection"], [10, "module-ajmc.olr.map_utils"], [10, "module-ajmc.olr.utils"], [11, "module-ajmc.olr.layoutlm"], [11, "module-ajmc.olr.layoutlm.draw"], [11, "module-ajmc.olr.layoutlm.layoutlm"], [12, "module-ajmc.olr.yolo"], [12, "module-ajmc.olr.yolo.utils"], [13, "module-ajmc.text_processing"], [13, "module-ajmc.text_processing.canonical_classes"], [13, "module-ajmc.text_processing.cas_utils"], [13, "module-ajmc.text_processing.generic_classes"], [13, "module-ajmc.text_processing.markup_processing"], [13, "module-ajmc.text_processing.ocr_classes"]], "ajmcimage (class in ajmc.commons.image)": [[1, "ajmc.commons.image.AjmcImage"]], "shape (class in ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.Shape"]], "adjust_bbox_to_included_contours() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.adjust_bbox_to_included_contours"]], "ajmc.commons": [[1, "module-ajmc.commons"]], "ajmc.commons.arithmetic": [[1, "module-ajmc.commons.arithmetic"]], "ajmc.commons.docstrings": [[1, "module-ajmc.commons.docstrings"]], "ajmc.commons.file_management": [[1, "module-ajmc.commons.file_management"]], "ajmc.commons.geometry": [[1, "module-ajmc.commons.geometry"]], "ajmc.commons.image": [[1, "module-ajmc.commons.image"]], "ajmc.commons.miscellaneous": [[1, "module-ajmc.commons.miscellaneous"]], "ajmc.commons.unicode_utils": [[1, "module-ajmc.commons.unicode_utils"]], "ajmc.commons.variables": [[1, "module-ajmc.commons.variables"]], "align_rgb_values() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.align_rgb_values"]], "aligned_print() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.aligned_print"]], "are_bboxes_overlapping() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.are_bboxes_overlapping"]], "are_bboxes_overlapping_with_threshold() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.are_bboxes_overlapping_with_threshold"]], "are_intervals_within_intervals() (in module ajmc.commons.arithmetic)": [[1, "ajmc.commons.arithmetic.are_intervals_within_intervals"]], "area (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.area"]], "bbox (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.bbox"]], "binarize() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.binarize"]], "center (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.center"]], "check_ocr_gt_spreadsheet_conformity() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.check_ocr_gt_spreadsheet_conformity"]], "check_via_spreadsheet_conformity() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.check_via_spreadsheet_conformity"]], "chunk_string_by_charsets() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.chunk_string_by_charsets"]], "clean_all_ocr_runs_outputs_dirs() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.clean_all_ocr_runs_outputs_dirs"]], "compute_bbox_area() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.compute_bbox_area"]], "compute_bbox_overlap_area() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.compute_bbox_overlap_area"]], "compute_interval_overlap() (in module ajmc.commons.arithmetic)": [[1, "ajmc.commons.arithmetic.compute_interval_overlap"]], "contours (ajmc.commons.image.ajmcimage property)": [[1, "ajmc.commons.image.AjmcImage.contours"]], "count_chars_by_charset() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.count_chars_by_charset"]], "count_chars_by_charset_nfd() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.count_chars_by_charset_nfd"]], "crop() (ajmc.commons.image.ajmcimage method)": [[1, "ajmc.commons.image.AjmcImage.crop"]], "data_sanity_check() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.data_sanity_check"]], "docstring_formatter() (in module ajmc.commons.docstrings)": [[1, "ajmc.commons.docstrings.docstring_formatter"]], "draw_box() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.draw_box"]], "draw_contours() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.draw_contours"]], "draw_reading_order() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.draw_reading_order"]], "draw_textcontainers() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.draw_textcontainers"]], "find_contours() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.find_contours"]], "find_replace_in_all_comm_dirs() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.find_replace_in_all_comm_dirs"]], "from_center_w_h() (ajmc.commons.geometry.shape class method)": [[1, "ajmc.commons.geometry.Shape.from_center_w_h"]], "from_numpy_array() (ajmc.commons.geometry.shape class method)": [[1, "ajmc.commons.geometry.Shape.from_numpy_array"]], "from_xywh() (ajmc.commons.geometry.shape class method)": [[1, "ajmc.commons.geometry.Shape.from_xywh"]], "get_62_based_datecode() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.get_62_based_datecode"]], "get_all_chars_from_range() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.get_all_chars_from_range"]], "get_all_chars_from_ranges() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.get_all_chars_from_ranges"]], "get_bbox_from_points() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.get_bbox_from_points"]], "get_char_charset() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.get_char_charset"]], "get_char_unicode_name() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.get_char_unicode_name"]], "get_comm_base_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_base_dir"]], "get_comm_canonical_default_path() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_canonical_default_path"]], "get_comm_canonical_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_canonical_dir"]], "get_comm_canonical_path_from_pattern() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_canonical_path_from_pattern"]], "get_comm_img_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_img_dir"]], "get_comm_lemlink_jsons_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_lemlink_jsons_dir"]], "get_comm_lemlink_xmis_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_lemlink_xmis_dir"]], "get_comm_ner_jsons_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ner_jsons_dir"]], "get_comm_ner_xmis_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ner_xmis_dir"]], "get_comm_ocr_gt_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ocr_gt_dir"]], "get_comm_ocr_gt_pairs_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ocr_gt_pairs_dir"]], "get_comm_ocr_outputs_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ocr_outputs_dir"]], "get_comm_ocr_runs_dir() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_ocr_runs_dir"]], "get_comm_sections_path() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_sections_path"]], "get_comm_via_path() (in module ajmc.commons.variables)": [[1, "ajmc.commons.variables.get_comm_via_path"]], "get_custom_logger() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.get_custom_logger"]], "get_imports() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.get_imports"]], "get_metadata_spreadsheet() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.get_metadata_spreadsheet"]], "get_ocr_gt_spreadsheet() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.get_ocr_gt_spreadsheet"]], "get_olr_gt_spreadsheet() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.get_olr_gt_spreadsheet"]], "get_unique_elements() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.get_unique_elements"]], "harmonise_ligatures() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_ligatures"]], "harmonise_miscellaneous_symbols() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_miscellaneous_symbols"]], "harmonise_non_printable() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_non_printable"]], "harmonise_punctuation() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_punctuation"]], "harmonise_spaces() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_spaces"]], "harmonise_unicode() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.harmonise_unicode"]], "height (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.height"]], "height (ajmc.commons.image.ajmcimage property)": [[1, "ajmc.commons.image.AjmcImage.height"]], "int_to_x_based_code() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.int_to_x_based_code"]], "is_bbox_within_bbox() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.is_bbox_within_bbox"]], "is_bbox_within_bbox_with_threshold() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.is_bbox_within_bbox_with_threshold"]], "is_charset_string() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.is_charset_string"]], "is_charset_string_nfd() (in module ajmc.commons.unicode_utils)": [[1, "ajmc.commons.unicode_utils.is_charset_string_nfd"]], "is_interval_within_interval() (in module ajmc.commons.arithmetic)": [[1, "ajmc.commons.arithmetic.is_interval_within_interval"]], "is_point_within_bbox() (in module ajmc.commons.geometry)": [[1, "ajmc.commons.geometry.is_point_within_bbox"]], "log_to_file() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.log_to_file"]], "matrix (ajmc.commons.image.ajmcimage property)": [[1, "ajmc.commons.image.AjmcImage.matrix"]], "move_files_in_each_commentary_dir() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.move_files_in_each_commentary_dir"]], "prefix_command_with_conda_env() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.prefix_command_with_conda_env"]], "read_google_sheet() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.read_google_sheet"]], "recursive_iterator() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.recursive_iterator"]], "remove_artifacts_from_contours() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.remove_artifacts_from_contours"]], "resize_image() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.resize_image"]], "rgb_to_bgr() (in module ajmc.commons.image)": [[1, "ajmc.commons.image.rgb_to_bgr"]], "safe_divide() (in module ajmc.commons.arithmetic)": [[1, "ajmc.commons.arithmetic.safe_divide"]], "show() (ajmc.commons.image.ajmcimage method)": [[1, "ajmc.commons.image.AjmcImage.show"]], "split_list() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.split_list"]], "timer() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.timer"]], "validate_json_schema() (in module ajmc.commons.miscellaneous)": [[1, "ajmc.commons.miscellaneous.validate_json_schema"]], "walk_dirs() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.walk_dirs"]], "walk_files() (in module ajmc.commons.file_management)": [[1, "ajmc.commons.file_management.walk_files"]], "width (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.width"]], "width (ajmc.commons.image.ajmcimage property)": [[1, "ajmc.commons.image.AjmcImage.width"]], "write() (ajmc.commons.image.ajmcimage method)": [[1, "ajmc.commons.image.AjmcImage.write"]], "xywh (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.xywh"]], "xyxy (ajmc.commons.geometry.shape property)": [[1, "ajmc.commons.geometry.Shape.xyxy"]], "corpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.Corpus"]], "dublincorerecord (class in ajmc.corpora.bibliographic_records)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord"]], "logeioncorpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.LogeionCorpus"]], "oglcorpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.OGLCorpus"]], "perseuslegacycorpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus"]], "plaintextcorpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.PlainTextCorpus"]], "teicorpus (class in ajmc.corpora.corpora_classes)": [[2, "ajmc.corpora.corpora_classes.TeiCorpus"]], "ajmc.corpora": [[2, "module-ajmc.corpora"]], "ajmc.corpora.bibliographic_records": [[2, "module-ajmc.corpora.bibliographic_records"]], "ajmc.corpora.cleaning_utils": [[2, "module-ajmc.corpora.cleaning_utils"]], "ajmc.corpora.corpora_classes": [[2, "module-ajmc.corpora.corpora_classes"]], "ajmc.corpora.scraping_utils": [[2, "module-ajmc.corpora.scraping_utils"]], "ajmc.corpora.variables": [[2, "module-ajmc.corpora.variables"]], "auto_init() (ajmc.corpora.corpora_classes.corpus class method)": [[2, "ajmc.corpora.corpora_classes.Corpus.auto_init"]], "basic_clean() (in module ajmc.corpora.cleaning_utils)": [[2, "ajmc.corpora.cleaning_utils.basic_clean"]], "convert_soup_to_unicode() (ajmc.corpora.corpora_classes.perseuslegacycorpus static method)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus.convert_soup_to_unicode"]], "creator() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.creator"]], "data_dir (ajmc.corpora.corpora_classes.logeioncorpus property)": [[2, "ajmc.corpora.corpora_classes.LogeionCorpus.data_dir"]], "data_dir (ajmc.corpora.corpora_classes.oglcorpus property)": [[2, "ajmc.corpora.corpora_classes.OGLCorpus.data_dir"]], "data_dir (ajmc.corpora.corpora_classes.perseuslegacycorpus property)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus.data_dir"]], "data_dir (ajmc.corpora.corpora_classes.plaintextcorpus property)": [[2, "ajmc.corpora.corpora_classes.PlainTextCorpus.data_dir"]], "data_dir (ajmc.corpora.corpora_classes.teicorpus property)": [[2, "ajmc.corpora.corpora_classes.TeiCorpus.data_dir"]], "data_dir() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.data_dir"]], "description() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.description"]], "files (ajmc.corpora.corpora_classes.logeioncorpus property)": [[2, "ajmc.corpora.corpora_classes.LogeionCorpus.files"]], "files (ajmc.corpora.corpora_classes.oglcorpus property)": [[2, "ajmc.corpora.corpora_classes.OGLCorpus.files"]], "files (ajmc.corpora.corpora_classes.perseuslegacycorpus property)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus.files"]], "files (ajmc.corpora.corpora_classes.plaintextcorpus property)": [[2, "ajmc.corpora.corpora_classes.PlainTextCorpus.files"]], "files (ajmc.corpora.corpora_classes.teicorpus property)": [[2, "ajmc.corpora.corpora_classes.TeiCorpus.files"]], "files() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.files"]], "find_recurrent_lines() (in module ajmc.corpora.cleaning_utils)": [[2, "ajmc.corpora.cleaning_utils.find_recurrent_lines"]], "get_chunks() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_chunks"]], "get_documents() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_documents"]], "get_html() (in module ajmc.corpora.scraping_utils)": [[2, "ajmc.corpora.scraping_utils.get_html"]], "get_lexica() (ajmc.corpora.corpora_classes.logeioncorpus method)": [[2, "ajmc.corpora.corpora_classes.LogeionCorpus.get_lexica"]], "get_lines() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_lines"]], "get_plain_text() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_plain_text"]], "get_plain_text() (ajmc.corpora.corpora_classes.logeioncorpus method)": [[2, "ajmc.corpora.corpora_classes.LogeionCorpus.get_plain_text"]], "get_plain_text() (ajmc.corpora.corpora_classes.perseuslegacycorpus method)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus.get_plain_text"]], "get_plain_text() (ajmc.corpora.corpora_classes.plaintextcorpus method)": [[2, "ajmc.corpora.corpora_classes.PlainTextCorpus.get_plain_text"]], "get_plain_text() (ajmc.corpora.corpora_classes.teicorpus method)": [[2, "ajmc.corpora.corpora_classes.TeiCorpus.get_plain_text"]], "get_property_tag_text() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.get_property_tag_text"]], "get_records_list() (in module ajmc.corpora.bibliographic_records)": [[2, "ajmc.corpora.bibliographic_records.get_records_list"]], "get_regions() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_regions"]], "get_words() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.get_words"]], "harmonise_linebreaks() (in module ajmc.corpora.cleaning_utils)": [[2, "ajmc.corpora.cleaning_utils.harmonise_linebreaks"]], "keywords() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.keywords"]], "keywords_string() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.keywords_string"]], "language() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.language"]], "oai_files_to_dataframe() (in module ajmc.corpora.scraping_utils)": [[2, "ajmc.corpora.scraping_utils.oai_files_to_dataframe"]], "publisher() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.publisher"]], "read_document() (ajmc.corpora.corpora_classes.perseuslegacycorpus static method)": [[2, "ajmc.corpora.corpora_classes.PerseusLegacyCorpus.read_document"]], "scrape_page() (in module ajmc.corpora.scraping_utils)": [[2, "ajmc.corpora.scraping_utils.scrape_page"]], "scrape_resumptiontoken_oai() (in module ajmc.corpora.scraping_utils)": [[2, "ajmc.corpora.scraping_utils.scrape_resumptiontoken_oai"]], "title() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.title"]], "whole_text() (ajmc.corpora.bibliographic_records.dublincorerecord method)": [[2, "ajmc.corpora.bibliographic_records.DublinCoreRecord.whole_text"]], "write_plain_text() (ajmc.corpora.corpora_classes.corpus method)": [[2, "ajmc.corpora.corpora_classes.Corpus.write_plain_text"]], "ajmc.nlp": [[3, "module-ajmc.nlp"]], "ajmc.nlp.token_classification": [[4, "module-ajmc.nlp.token_classification"]], "ajmc.nlp.token_classification.config": [[4, "module-ajmc.nlp.token_classification.config"]], "ajmc.nlp.token_classification.evaluation": [[4, "module-ajmc.nlp.token_classification.evaluation"]], "ajmc.nlp.token_classification.model": [[4, "module-ajmc.nlp.token_classification.model"]], "ajmc.nlp.token_classification.pipeline": [[4, "module-ajmc.nlp.token_classification.pipeline"]], "create_default_config() (in module ajmc.nlp.token_classification.config)": [[4, "ajmc.nlp.token_classification.config.create_default_config"]], "create_dirs() (in module ajmc.nlp.token_classification.pipeline)": [[4, "ajmc.nlp.token_classification.pipeline.create_dirs"]], "evaluate_dataset() (in module ajmc.nlp.token_classification.evaluation)": [[4, "ajmc.nlp.token_classification.evaluation.evaluate_dataset"]], "evaluate_hipe() (in module ajmc.nlp.token_classification.evaluation)": [[4, "ajmc.nlp.token_classification.evaluation.evaluate_hipe"]], "evaluate_iob_files() (in module ajmc.nlp.token_classification.evaluation)": [[4, "ajmc.nlp.token_classification.evaluation.evaluate_iob_files"]], "main() (in module ajmc.nlp.token_classification.pipeline)": [[4, "ajmc.nlp.token_classification.pipeline.main"]], "parse_config_from_json() (in module ajmc.nlp.token_classification.config)": [[4, "ajmc.nlp.token_classification.config.parse_config_from_json"]], "predict() (in module ajmc.nlp.token_classification.model)": [[4, "ajmc.nlp.token_classification.model.predict"]], "predict_and_write_tsv() (in module ajmc.nlp.token_classification.model)": [[4, "ajmc.nlp.token_classification.model.predict_and_write_tsv"]], "predict_batches() (in module ajmc.nlp.token_classification.model)": [[4, "ajmc.nlp.token_classification.model.predict_batches"]], "predict_dataset() (in module ajmc.nlp.token_classification.model)": [[4, "ajmc.nlp.token_classification.model.predict_dataset"]], "seqeval_evaluation() (in module ajmc.nlp.token_classification.evaluation)": [[4, "ajmc.nlp.token_classification.evaluation.seqeval_evaluation"]], "seqeval_to_df() (in module ajmc.nlp.token_classification.evaluation)": [[4, "ajmc.nlp.token_classification.evaluation.seqeval_to_df"]], "set_seed() (in module ajmc.nlp.token_classification.pipeline)": [[4, "ajmc.nlp.token_classification.pipeline.set_seed"]], "train() (in module ajmc.nlp.token_classification.pipeline)": [[4, "ajmc.nlp.token_classification.pipeline.train"]], "customdataset (class in ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.CustomDataset"]], "hipedataset (class in ajmc.nlp.token_classification.data_preparation.hipe_iob)": [[5, "ajmc.nlp.token_classification.data_preparation.hipe_iob.HipeDataset"]], "ajmc.nlp.token_classification.data_preparation": [[5, "module-ajmc.nlp.token_classification.data_preparation"]], "ajmc.nlp.token_classification.data_preparation.hipe_iob": [[5, "module-ajmc.nlp.token_classification.data_preparation.hipe_iob"]], "ajmc.nlp.token_classification.data_preparation.utils": [[5, "module-ajmc.nlp.token_classification.data_preparation.utils"]], "align_from_tokenized() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.align_from_tokenized"]], "align_labels_to_tokenized() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.align_labels_to_tokenized"]], "align_to_tokenized() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.align_to_tokenized"]], "create_prediction_dataset() (in module ajmc.nlp.token_classification.data_preparation.hipe_iob)": [[5, "ajmc.nlp.token_classification.data_preparation.hipe_iob.create_prediction_dataset"]], "manual_truncation() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.manual_truncation"]], "nerify_labels() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.nerify_labels"]], "prepare_datasets() (in module ajmc.nlp.token_classification.data_preparation.hipe_iob)": [[5, "ajmc.nlp.token_classification.data_preparation.hipe_iob.prepare_datasets"]], "sort_ner_labels() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.sort_ner_labels"]], "write_predictions_to_tsv() (in module ajmc.nlp.token_classification.data_preparation.utils)": [[5, "ajmc.nlp.token_classification.data_preparation.utils.write_predictions_to_tsv"]], "font (class in ajmc.ocr.font_utils)": [[6, "ajmc.ocr.font_utils.Font"]], "ajmc.ocr": [[6, "module-ajmc.ocr"]], "ajmc.ocr.config": [[6, "module-ajmc.ocr.config"]], "ajmc.ocr.evaluation": [[6, "module-ajmc.ocr.evaluation"]], "ajmc.ocr.font_utils": [[6, "module-ajmc.ocr.font_utils"]], "ajmc.ocr.utils": [[6, "module-ajmc.ocr.utils"]], "ajmc.ocr.variables": [[6, "module-ajmc.ocr.variables"]], "bag_of_word_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.bag_of_word_evaluation"]], "commentary_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.commentary_evaluation"]], "config_to_tesstrain_config() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.config_to_tesstrain_config"]], "coord_based_page_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.coord_based_page_evaluation"]], "count_errors_by_charset() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.count_errors_by_charset"]], "directory_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.directory_evaluation"]], "font_variants (ajmc.ocr.font_utils.font property)": [[6, "ajmc.ocr.font_utils.Font.font_variants"]], "ft_collection (ajmc.ocr.font_utils.font property)": [[6, "ajmc.ocr.font_utils.Font.ft_collection"]], "ft_font (ajmc.ocr.font_utils.font property)": [[6, "ajmc.ocr.font_utils.Font.ft_font"]], "get_all_configs() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.get_all_configs"]], "get_config_reader() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.get_config_reader"]], "get_dataset_config_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_dataset_config_path"]], "get_dataset_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_dataset_dir"]], "get_dataset_metadata_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_dataset_metadata_path"]], "get_experiment_config_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_experiment_config_path"]], "get_experiment_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_experiment_dir"]], "get_experiment_model_outputs_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_experiment_model_outputs_dir"]], "get_experiment_models_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_experiment_models_dir"]], "get_font_variant_index() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.get_font_variant_index"]], "get_font_variant_path() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.get_font_variant_path"]], "get_kraken_command() (in module ajmc.ocr.utils)": [[6, "ajmc.ocr.utils.get_kraken_command"]], "get_missing_glyphs() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.get_missing_glyphs"]], "get_model_config_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_model_config_path"]], "get_model_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_model_dir"]], "get_model_train_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_model_train_dir"]], "get_source_dataset_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_source_dataset_dir"]], "get_traineddata_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_traineddata_dir"]], "get_traineddata_unpacked_dir() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_traineddata_unpacked_dir"]], "get_trainneddata_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_trainneddata_path"]], "get_wordlist_path() (in module ajmc.ocr.variables)": [[6, "ajmc.ocr.variables.get_wordlist_path"]], "guess_ocr_format() (in module ajmc.ocr.utils)": [[6, "ajmc.ocr.utils.guess_ocr_format"]], "has_charset_glyphs() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.has_charset_glyphs"]], "has_glyph() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.has_glyph"]], "has_glyphs() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.has_glyphs"]], "initialize_soup() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.initialize_soup"]], "insert_text_in_soup() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.insert_text_in_soup"]], "line_based_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.line_based_evaluation"]], "name (ajmc.ocr.font_utils.font property)": [[6, "ajmc.ocr.font_utils.Font.name"]], "pil_font (ajmc.ocr.font_utils.font property)": [[6, "ajmc.ocr.font_utils.Font.pil_font"]], "record_editops() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.record_editops"]], "row_to_dataset_config() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.row_to_dataset_config"]], "row_to_experiment_config() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.row_to_experiment_config"]], "row_to_model_config() (in module ajmc.ocr.config)": [[6, "ajmc.ocr.config.row_to_model_config"]], "set_size() (ajmc.ocr.font_utils.font method)": [[6, "ajmc.ocr.font_utils.Font.set_size"]], "simple_coordinates_based_evaluation() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.simple_coordinates_based_evaluation"]], "walk_through_font_dir() (in module ajmc.ocr.font_utils)": [[6, "ajmc.ocr.font_utils.walk_through_font_dir"]], "write_editops_record() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.write_editops_record"]], "write_error_counts() (in module ajmc.ocr.evaluation)": [[6, "ajmc.ocr.evaluation.write_error_counts"]], "ajmc.ocr.preprocessing": [[7, "module-ajmc.ocr.preprocessing"]], "ajmc.ocr.preprocessing.data_augmentation": [[7, "module-ajmc.ocr.preprocessing.data_augmentation"]], "ajmc.ocr.preprocessing.data_preparation": [[7, "module-ajmc.ocr.preprocessing.data_preparation"]], "ajmc.ocr.preprocessing.get_source_datasets": [[7, "module-ajmc.ocr.preprocessing.get_source_datasets"]], "ajmc.ocr.preprocessing.pagify_dataset": [[7, "module-ajmc.ocr.preprocessing.pagify_dataset"]], "basic_text_cleaning() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.basic_text_cleaning"]], "clean_source_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.clean_source_dataset"]], "compute_dataset_metadata() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.compute_dataset_metadata"]], "controle_overwrite() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.controle_overwrite"]], "create_blank_image() (in module ajmc.ocr.preprocessing.pagify_dataset)": [[7, "ajmc.ocr.preprocessing.pagify_dataset.create_blank_image"]], "erode() (in module ajmc.ocr.preprocessing.data_augmentation)": [[7, "ajmc.ocr.preprocessing.data_augmentation.erode"]], "gather_and_transform_dataset() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.gather_and_transform_dataset"]], "get_commentary_image_dimension() (in module ajmc.ocr.preprocessing.pagify_dataset)": [[7, "ajmc.ocr.preprocessing.pagify_dataset.get_commentary_image_dimension"]], "import_dataset_metadata() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.import_dataset_metadata"]], "insert_line() (in module ajmc.ocr.preprocessing.pagify_dataset)": [[7, "ajmc.ocr.preprocessing.pagify_dataset.insert_line"]], "insert_lines() (in module ajmc.ocr.preprocessing.pagify_dataset)": [[7, "ajmc.ocr.preprocessing.pagify_dataset.insert_lines"]], "main() (in module ajmc.ocr.preprocessing.data_augmentation)": [[7, "ajmc.ocr.preprocessing.data_augmentation.main"]], "make_clean_ajmc_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_ajmc_dataset"]], "make_clean_archiscribe_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_archiscribe_dataset"]], "make_clean_gt4histocr_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_gt4histocr_dataset"]], "make_clean_pogretra_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_pogretra_dataset"]], "make_clean_porta_fontium_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_porta_fontium_dataset"]], "make_clean_source_datasets() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_source_datasets"]], "make_clean_synthetic_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.make_clean_synthetic_dataset"]], "make_dataset() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.make_dataset"]], "make_datasets() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.make_datasets"]], "pagify_dataset() (in module ajmc.ocr.preprocessing.pagify_dataset)": [[7, "ajmc.ocr.preprocessing.pagify_dataset.pagify_dataset"]], "random_degrade() (in module ajmc.ocr.preprocessing.data_augmentation)": [[7, "ajmc.ocr.preprocessing.data_augmentation.random_degrade"]], "random_distort() (in module ajmc.ocr.preprocessing.data_augmentation)": [[7, "ajmc.ocr.preprocessing.data_augmentation.random_distort"]], "regularize_dataset() (in module ajmc.ocr.preprocessing.get_source_datasets)": [[7, "ajmc.ocr.preprocessing.get_source_datasets.regularize_dataset"]], "safe_check_dataset() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.safe_check_dataset"]], "sample_dataset_metadata() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.sample_dataset_metadata"]], "split_root_dataset_metadata() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.split_root_dataset_metadata"]], "write_augmented_line() (in module ajmc.ocr.preprocessing.data_augmentation)": [[7, "ajmc.ocr.preprocessing.data_augmentation.write_augmented_line"]], "write_dataset_metadata() (in module ajmc.ocr.preprocessing.data_preparation)": [[7, "ajmc.ocr.preprocessing.data_preparation.write_dataset_metadata"]], "beamctcdecoder (class in ajmc.ocr.pytorch.ctc_decoder_torch)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.BeamCTCDecoder"]], "decoder (class in ajmc.ocr.pytorch.ctc_decoder_torch)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.Decoder"]], "densenetbackbone (class in ajmc.ocr.pytorch.model)": [[8, "ajmc.ocr.pytorch.model.DenseNetBackbone"]], "greedydecoder (class in ajmc.ocr.pytorch.ctc_decoder_torch)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.GreedyDecoder"]], "ocrbatch (class in ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch"]], "ocrevaldataset (class in ajmc.ocr.pytorch.datasets)": [[8, "ajmc.ocr.pytorch.datasets.OcrEvalDataset"]], "ocriterdataset (class in ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.OcrIterDataset"]], "ocrline (class in ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.OcrLine"]], "ocrmodeltrainer (class in ajmc.ocr.pytorch.train_parallel)": [[8, "ajmc.ocr.pytorch.train_parallel.OcrModelTrainer"]], "ocrtorchdataset (class in ajmc.ocr.pytorch.datasets)": [[8, "ajmc.ocr.pytorch.datasets.OcrTorchDataset"]], "ocrtorchmodel (class in ajmc.ocr.pytorch.model)": [[8, "ajmc.ocr.pytorch.model.OcrTorchModel"]], "ocrtrainingdataset (class in ajmc.ocr.pytorch.datasets)": [[8, "ajmc.ocr.pytorch.datasets.OcrTrainingDataset"]], "ajmc.ocr.pytorch": [[8, "module-ajmc.ocr.pytorch"]], "ajmc.ocr.pytorch.config": [[8, "module-ajmc.ocr.pytorch.config"]], "ajmc.ocr.pytorch.ctc_decoder_torch": [[8, "module-ajmc.ocr.pytorch.ctc_decoder_torch"]], "ajmc.ocr.pytorch.data_generation": [[8, "module-ajmc.ocr.pytorch.data_generation"]], "ajmc.ocr.pytorch.data_processing": [[8, "module-ajmc.ocr.pytorch.data_processing"]], "ajmc.ocr.pytorch.datasets": [[8, "module-ajmc.ocr.pytorch.datasets"]], "ajmc.ocr.pytorch.model": [[8, "module-ajmc.ocr.pytorch.model"]], "ajmc.ocr.pytorch.train_parallel": [[8, "module-ajmc.ocr.pytorch.train_parallel"]], "array2pil() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.array2pil"]], "check_file_count() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.check_file_count"]], "chunk_img_tensor() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.chunk_img_tensor"]], "chunks (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.chunks"]], "chunks_to_img_mapping (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.chunks_to_img_mapping"]], "classes_to_indices (ajmc.ocr.pytorch.datasets.ocrtorchdataset property)": [[8, "ajmc.ocr.pytorch.datasets.OcrTorchDataset.classes_to_indices"]], "compute_n_chunks() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.compute_n_chunks"]], "compute_padding() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.compute_padding"]], "convert_tensor() (ajmc.ocr.pytorch.ctc_decoder_torch.beamctcdecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.BeamCTCDecoder.convert_tensor"]], "convert_to_strings() (ajmc.ocr.pytorch.ctc_decoder_torch.beamctcdecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.BeamCTCDecoder.convert_to_strings"]], "convert_to_strings() (ajmc.ocr.pytorch.ctc_decoder_torch.greedydecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.GreedyDecoder.convert_to_strings"]], "create_sample_dir() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.create_sample_dir"]], "crop_image_tensor_to_nonzero() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.crop_image_tensor_to_nonzero"]], "ddp_setup() (in module ajmc.ocr.pytorch.train_parallel)": [[8, "ajmc.ocr.pytorch.train_parallel.ddp_setup"]], "decode() (ajmc.ocr.pytorch.ctc_decoder_torch.beamctcdecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.BeamCTCDecoder.decode"]], "decode() (ajmc.ocr.pytorch.ctc_decoder_torch.decoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.Decoder.decode"]], "decode() (ajmc.ocr.pytorch.ctc_decoder_torch.greedydecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.GreedyDecoder.decode"]], "degrade_line() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.degrade_line"]], "distort_line() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.distort_line"]], "distribute() (ajmc.ocr.pytorch.data_processing.ocriterdataset method)": [[8, "ajmc.ocr.pytorch.data_processing.OcrIterDataset.distribute"]], "do_all_purpose_fonts() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_all_purpose_fonts"]], "do_capitals() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_capitals"]], "do_gibberish() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_gibberish"]], "do_greek_fonts() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_greek_fonts"]], "do_latin_fonts() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_latin_fonts"]], "do_mixed_fonts() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.do_mixed_fonts"]], "draw_textline() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.draw_textline"]], "forward() (ajmc.ocr.pytorch.model.densenetbackbone method)": [[8, "ajmc.ocr.pytorch.model.DenseNetBackbone.forward"]], "forward() (ajmc.ocr.pytorch.model.ocrtorchmodel method)": [[8, "ajmc.ocr.pytorch.model.OcrTorchModel.forward"]], "from_config() (ajmc.ocr.pytorch.model.densenetbackbone class method)": [[8, "ajmc.ocr.pytorch.model.DenseNetBackbone.from_config"]], "get_config() (in module ajmc.ocr.pytorch.config)": [[8, "ajmc.ocr.pytorch.config.get_config"]], "get_custom_dataloader() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.get_custom_dataloader"]], "get_textline_font_variants() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.get_textline_font_variants"]], "get_textline_generators() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.get_textline_generators"]], "img_widths (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.img_widths"]], "indices_to_classes (ajmc.ocr.pytorch.datasets.ocrtorchdataset property)": [[8, "ajmc.ocr.pytorch.datasets.OcrTorchDataset.indices_to_classes"]], "inner_loop() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.inner_loop"]], "invert_image_tensor() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.invert_image_tensor"]], "main() (in module ajmc.ocr.pytorch.train_parallel)": [[8, "ajmc.ocr.pytorch.train_parallel.main"]], "normalize_image_tensor() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.normalize_image_tensor"]], "pad_image() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.pad_image"]], "pil2array() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.pil2array"]], "predict() (ajmc.ocr.pytorch.model.ocrtorchmodel method)": [[8, "ajmc.ocr.pytorch.model.OcrTorchModel.predict"]], "prepare_img() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.prepare_img"]], "process_string() (ajmc.ocr.pytorch.ctc_decoder_torch.greedydecoder method)": [[8, "ajmc.ocr.pytorch.ctc_decoder_torch.GreedyDecoder.process_string"]], "recompose_batched_chunks() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.recompose_batched_chunks"]], "recompose_chunks() (in module ajmc.ocr.pytorch.data_processing)": [[8, "ajmc.ocr.pytorch.data_processing.recompose_chunks"]], "text_lengths (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.text_lengths"]], "textline_generator() (in module ajmc.ocr.pytorch.data_generation)": [[8, "ajmc.ocr.pytorch.data_generation.textline_generator"]], "texts (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.texts"]], "texts_tensor (ajmc.ocr.pytorch.data_processing.ocrbatch property)": [[8, "ajmc.ocr.pytorch.data_processing.OcrBatch.texts_tensor"]], "train() (ajmc.ocr.pytorch.train_parallel.ocrmodeltrainer method)": [[8, "ajmc.ocr.pytorch.train_parallel.OcrModelTrainer.train"]], "ajmc.ocr.tesseract": [[9, "module-ajmc.ocr.tesseract"]], "ajmc.ocr.tesseract.dictionaries": [[9, "module-ajmc.ocr.tesseract.dictionaries"]], "ajmc.ocr.tesseract.experiments": [[9, "module-ajmc.ocr.tesseract.experiments"]], "ajmc.ocr.tesseract.models": [[9, "module-ajmc.ocr.tesseract.models"]], "ajmc.ocr.tesseract.pipeline": [[9, "module-ajmc.ocr.tesseract.pipeline"]], "ajmc.ocr.tesseract.tesseract_utils": [[9, "module-ajmc.ocr.tesseract.tesseract_utils"]], "change_traineddata_wordlist() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.change_traineddata_wordlist"]], "create_general_table() (in module ajmc.ocr.tesseract.tesseract_utils)": [[9, "ajmc.ocr.tesseract.tesseract_utils.create_general_table"]], "create_traineddata_with_wordlist() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.create_traineddata_with_wordlist"]], "get_mr_abbr_wordlist() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.get_mr_abbr_wordlist"]], "get_or_create_wordlist_path() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.get_or_create_wordlist_path"]], "get_traineddata_wordlist() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.get_traineddata_wordlist"]], "get_training_command() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.get_training_command"]], "make_experiment() (in module ajmc.ocr.tesseract.experiments)": [[9, "ajmc.ocr.tesseract.experiments.make_experiment"]], "make_experiment_dir() (in module ajmc.ocr.tesseract.experiments)": [[9, "ajmc.ocr.tesseract.experiments.make_experiment_dir"]], "make_experiments() (in module ajmc.ocr.tesseract.experiments)": [[9, "ajmc.ocr.tesseract.experiments.make_experiments"]], "make_general_results_table() (in module ajmc.ocr.tesseract.experiments)": [[9, "ajmc.ocr.tesseract.experiments.make_general_results_table"]], "make_model() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.make_model"]], "make_model_dirs() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.make_model_dirs"]], "make_models() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.make_models"]], "merge_wordlists() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.merge_wordlists"]], "reformulate_output_dir() (in module ajmc.ocr.tesseract.tesseract_utils)": [[9, "ajmc.ocr.tesseract.tesseract_utils.reformulate_output_dir"]], "run() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.run"]], "run_tess_command() (in module ajmc.ocr.tesseract.tesseract_utils)": [[9, "ajmc.ocr.tesseract.tesseract_utils.run_tess_command"]], "train() (in module ajmc.ocr.tesseract.models)": [[9, "ajmc.ocr.tesseract.models.train"]], "write_all_wordlists() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.write_all_wordlists"]], "write_combined_wordlists() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.write_combined_wordlists"]], "write_mr_abbr_wordlist() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.write_mr_abbr_wordlist"]], "write_unpacked_traineddata() (in module ajmc.ocr.tesseract.dictionaries)": [[9, "ajmc.ocr.tesseract.dictionaries.write_unpacked_traineddata"]], "ajmc.olr": [[10, "module-ajmc.olr"]], "ajmc.olr.automatic_region_detection": [[10, "module-ajmc.olr.automatic_region_detection"]], "ajmc.olr.map_utils": [[10, "module-ajmc.olr.map_utils"]], "ajmc.olr.utils": [[10, "module-ajmc.olr.utils"]], "correct_csv_manually() (in module ajmc.olr.automatic_region_detection)": [[10, "ajmc.olr.automatic_region_detection.correct_csv_manually"]], "detect_regions() (in module ajmc.olr.automatic_region_detection)": [[10, "ajmc.olr.automatic_region_detection.detect_regions"]], "get_olr_region_counts() (in module ajmc.olr.utils)": [[10, "ajmc.olr.utils.get_olr_region_counts"]], "get_olr_splits_page_ids() (in module ajmc.olr.utils)": [[10, "ajmc.olr.utils.get_olr_splits_page_ids"]], "get_page_region_dicts_from_via() (in module ajmc.olr.utils)": [[10, "ajmc.olr.utils.get_page_region_dicts_from_via"]], "initialize_general_results() (in module ajmc.olr.map_utils)": [[10, "ajmc.olr.map_utils.initialize_general_results"]], "main() (in module ajmc.olr.automatic_region_detection)": [[10, "ajmc.olr.automatic_region_detection.main"]], "select_page_regions_by_types() (in module ajmc.olr.utils)": [[10, "ajmc.olr.utils.select_page_regions_by_types"]], "sort_to_reading_order() (in module ajmc.olr.utils)": [[10, "ajmc.olr.utils.sort_to_reading_order"]], "update_general_results() (in module ajmc.olr.map_utils)": [[10, "ajmc.olr.map_utils.update_general_results"]], "write_csv_manually() (in module ajmc.olr.automatic_region_detection)": [[10, "ajmc.olr.automatic_region_detection.write_csv_manually"]], "ajmc.olr.layoutlm": [[11, "module-ajmc.olr.layoutlm"]], "ajmc.olr.layoutlm.draw": [[11, "module-ajmc.olr.layoutlm.draw"]], "ajmc.olr.layoutlm.layoutlm": [[11, "module-ajmc.olr.layoutlm.layoutlm"]], "align_predicted_page() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.align_predicted_page"]], "create_olr_config() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.create_olr_config"]], "draw_caption() (in module ajmc.olr.layoutlm.draw)": [[11, "ajmc.olr.layoutlm.draw.draw_caption"]], "draw_page_labels() (in module ajmc.olr.layoutlm.draw)": [[11, "ajmc.olr.layoutlm.draw.draw_page_labels"]], "draw_pages() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.draw_pages"]], "get_data_dict_pages() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.get_data_dict_pages"]], "main() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.main"]], "normalize_bounding_box() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.normalize_bounding_box"]], "page_to_layoutlm_encodings() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.page_to_layoutlm_encodings"]], "prepare_data() (in module ajmc.olr.layoutlm.layoutlm)": [[11, "ajmc.olr.layoutlm.layoutlm.prepare_data"]], "ajmc.olr.yolo": [[12, "module-ajmc.olr.yolo"]], "ajmc.olr.yolo.utils": [[12, "module-ajmc.olr.yolo.utils"]], "parse_yolo_txt() (in module ajmc.olr.yolo.utils)": [[12, "ajmc.olr.yolo.utils.parse_yolo_txt"]], "parse_yolo_txt_line() (in module ajmc.olr.yolo.utils)": [[12, "ajmc.olr.yolo.utils.parse_yolo_txt_line"]], "canonicalannotation (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalAnnotation"]], "canonicalcommentary (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalCommentary"]], "canonicalentity (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalEntity"]], "canonicalhyphenation (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalHyphenation"]], "canonicalline (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalLine"]], "canonicalpage (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalPage"]], "canonicalregion (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalRegion"]], "canonicalsection (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalSection"]], "canonicalsentence (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalSentence"]], "canonicaltextcontainer (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer"]], "canonicalword (class in ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.CanonicalWord"]], "commentary (class in ajmc.text_processing.generic_classes)": [[13, "ajmc.text_processing.generic_classes.Commentary"]], "ocrcommentary (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary"]], "ocrline (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OcrLine"]], "ocrpage (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OcrPage"]], "ocrtextcontainer (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer"]], "ocrword (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OcrWord"]], "olrregion (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.OlrRegion"]], "page (class in ajmc.text_processing.generic_classes)": [[13, "ajmc.text_processing.generic_classes.Page"]], "rawannotation (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.RawAnnotation"]], "rawentity (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.RawEntity"]], "rawhyphenation (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.RawHyphenation"]], "rawsection (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.RawSection"]], "rawsentence (class in ajmc.text_processing.ocr_classes)": [[13, "ajmc.text_processing.ocr_classes.RawSentence"]], "textcontainer (class in ajmc.text_processing.generic_classes)": [[13, "ajmc.text_processing.generic_classes.TextContainer"]], "adjust_bbox() (ajmc.text_processing.ocr_classes.ocrtextcontainer method)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer.adjust_bbox"]], "adjust_bbox() (ajmc.text_processing.ocr_classes.ocrword method)": [[13, "ajmc.text_processing.ocr_classes.OcrWord.adjust_bbox"]], "ajmc.text_processing": [[13, "module-ajmc.text_processing"]], "ajmc.text_processing.canonical_classes": [[13, "module-ajmc.text_processing.canonical_classes"]], "ajmc.text_processing.cas_utils": [[13, "module-ajmc.text_processing.cas_utils"]], "ajmc.text_processing.generic_classes": [[13, "module-ajmc.text_processing.generic_classes"]], "ajmc.text_processing.markup_processing": [[13, "module-ajmc.text_processing.markup_processing"]], "ajmc.text_processing.ocr_classes": [[13, "module-ajmc.text_processing.ocr_classes"]], "align_cas_annotation() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.align_cas_annotation"]], "basic_rebuild() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.basic_rebuild"]], "bbox (ajmc.text_processing.canonical_classes.canonicaltextcontainer property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.bbox"]], "bbox (ajmc.text_processing.ocr_classes.ocrpage property)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.bbox"]], "bbox (ajmc.text_processing.ocr_classes.ocrtextcontainer property)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer.bbox"]], "bbox() (ajmc.text_processing.canonical_classes.canonicalannotation method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalAnnotation.bbox"]], "bbox() (ajmc.text_processing.canonical_classes.canonicalentity method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalEntity.bbox"]], "bbox() (ajmc.text_processing.canonical_classes.canonicalhyphenation method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalHyphenation.bbox"]], "bbox() (ajmc.text_processing.canonical_classes.canonicalsentence method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalSentence.bbox"]], "children (ajmc.text_processing.generic_classes.textcontainer property)": [[13, "ajmc.text_processing.generic_classes.TextContainer.children"]], "compute_image_links() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.compute_image_links"]], "draw_textcontainers() (ajmc.text_processing.generic_classes.page method)": [[13, "ajmc.text_processing.generic_classes.Page.draw_textcontainers"]], "export_commentary_to_xmis() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.export_commentary_to_xmis"]], "export_ocr_gt_file_pairs() (ajmc.text_processing.generic_classes.commentary method)": [[13, "ajmc.text_processing.generic_classes.Commentary.export_ocr_gt_file_pairs"]], "find_all_elements() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.find_all_elements"]], "find_all_krakenhocr_elements() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.find_all_krakenhocr_elements"]], "find_all_pagexml_elements() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.find_all_pagexml_elements"]], "find_all_tesshocr_elements() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.find_all_tesshocr_elements"]], "from_ajmc_data() (ajmc.text_processing.ocr_classes.ocrcommentary class method)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.from_ajmc_data"]], "from_ajmc_data() (ajmc.text_processing.ocr_classes.ocrpage class method)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.from_ajmc_data"]], "from_cas_annotation() (ajmc.text_processing.ocr_classes.rawentity class method)": [[13, "ajmc.text_processing.ocr_classes.RawEntity.from_cas_annotation"]], "from_cas_annotation() (ajmc.text_processing.ocr_classes.rawhyphenation class method)": [[13, "ajmc.text_processing.ocr_classes.RawHyphenation.from_cas_annotation"]], "from_cas_annotation() (ajmc.text_processing.ocr_classes.rawsentence class method)": [[13, "ajmc.text_processing.ocr_classes.RawSentence.from_cas_annotation"]], "from_json() (ajmc.text_processing.canonical_classes.canonicalcommentary class method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalCommentary.from_json"]], "from_via() (ajmc.text_processing.ocr_classes.olrregion class method)": [[13, "ajmc.text_processing.ocr_classes.OlrRegion.from_via"]], "get_cas() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.get_cas"]], "get_element_bbox() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.get_element_bbox"]], "get_element_text() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.get_element_text"]], "get_hocr_element_bbox() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.get_hocr_element_bbox"]], "get_iiif_url() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.get_iiif_url"]], "get_page() (ajmc.text_processing.generic_classes.commentary method)": [[13, "ajmc.text_processing.generic_classes.Commentary.get_page"]], "get_pagexml_element_bbox() (in module ajmc.text_processing.markup_processing)": [[13, "ajmc.text_processing.markup_processing.get_pagexml_element_bbox"]], "get_section() (ajmc.text_processing.generic_classes.commentary method)": [[13, "ajmc.text_processing.generic_classes.Commentary.get_section"]], "get_tc_type_class() (in module ajmc.text_processing.canonical_classes)": [[13, "ajmc.text_processing.canonical_classes.get_tc_type_class"]], "get_text_window() (ajmc.text_processing.canonical_classes.canonicalannotation method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalAnnotation.get_text_window"]], "id (ajmc.text_processing.canonical_classes.canonicaltextcontainer property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.id"]], "image (ajmc.text_processing.canonical_classes.canonicalpage property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalPage.image"]], "image (ajmc.text_processing.canonical_classes.canonicaltextcontainer property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.image"]], "image (ajmc.text_processing.ocr_classes.ocrpage property)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.image"]], "image (ajmc.text_processing.ocr_classes.ocrtextcontainer property)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer.image"]], "images (ajmc.text_processing.ocr_classes.ocrcommentary property)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.images"]], "import_page_cas() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.import_page_cas"]], "import_page_rebuild() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.import_page_rebuild"]], "index (ajmc.text_processing.canonical_classes.canonicaltextcontainer property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.index"]], "markup (ajmc.text_processing.ocr_classes.ocrpage property)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.markup"]], "number (ajmc.text_processing.generic_classes.page property)": [[13, "ajmc.text_processing.generic_classes.Page.number"]], "ocr_format (ajmc.text_processing.ocr_classes.ocrpage property)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.ocr_format"]], "ocr_format (ajmc.text_processing.ocr_classes.ocrtextcontainer property)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer.ocr_format"]], "ocr_gt_page_ids (ajmc.text_processing.ocr_classes.ocrcommentary property)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.ocr_gt_page_ids"]], "ocr_gt_pages (ajmc.text_processing.canonical_classes.canonicalcommentary property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalCommentary.ocr_gt_pages"]], "ocr_gt_pages (ajmc.text_processing.ocr_classes.ocrcommentary property)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.ocr_gt_pages"]], "olr_gt_pages (ajmc.text_processing.generic_classes.commentary property)": [[13, "ajmc.text_processing.generic_classes.Commentary.olr_gt_pages"]], "optimise() (ajmc.text_processing.ocr_classes.ocrpage method)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.optimise"]], "parents (ajmc.text_processing.generic_classes.textcontainer property)": [[13, "ajmc.text_processing.generic_classes.TextContainer.parents"]], "rebuild_to_xmi() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.rebuild_to_xmi"]], "reset() (ajmc.text_processing.ocr_classes.ocrcommentary method)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.reset"]], "reset() (ajmc.text_processing.ocr_classes.ocrpage method)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.reset"]], "safe_import_page_annotations() (in module ajmc.text_processing.cas_utils)": [[13, "ajmc.text_processing.cas_utils.safe_import_page_annotations"]], "text (ajmc.text_processing.generic_classes.textcontainer property)": [[13, "ajmc.text_processing.generic_classes.TextContainer.text"]], "text (ajmc.text_processing.ocr_classes.ocrtextcontainer property)": [[13, "ajmc.text_processing.ocr_classes.OcrTextContainer.text"]], "text (ajmc.text_processing.ocr_classes.ocrword property)": [[13, "ajmc.text_processing.ocr_classes.OcrWord.text"]], "text() (ajmc.text_processing.canonical_classes.canonicalannotation method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalAnnotation.text"]], "to_alto() (ajmc.text_processing.canonical_classes.canonicalcommentary method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalCommentary.to_alto"]], "to_alto() (ajmc.text_processing.canonical_classes.canonicalpage method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalPage.to_alto"]], "to_canonical() (ajmc.text_processing.ocr_classes.ocrcommentary method)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.to_canonical"]], "to_inception_dict() (ajmc.text_processing.ocr_classes.ocrpage method)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.to_inception_dict"]], "to_inception_json() (ajmc.text_processing.ocr_classes.ocrpage method)": [[13, "ajmc.text_processing.ocr_classes.OcrPage.to_inception_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalcommentary method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalCommentary.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalentity method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalEntity.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalhyphenation method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalHyphenation.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalline method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalLine.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalpage method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalPage.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalregion method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalRegion.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalsection method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalSection.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalsentence method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalSentence.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicaltextcontainer method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.to_json"]], "to_json() (ajmc.text_processing.canonical_classes.canonicalword method)": [[13, "ajmc.text_processing.canonical_classes.CanonicalWord.to_json"]], "type (ajmc.text_processing.generic_classes.textcontainer property)": [[13, "ajmc.text_processing.generic_classes.TextContainer.type"]], "via_project (ajmc.text_processing.ocr_classes.ocrcommentary property)": [[13, "ajmc.text_processing.ocr_classes.OcrCommentary.via_project"]], "word_range (ajmc.text_processing.canonical_classes.canonicaltextcontainer property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalTextContainer.word_range"]], "word_range (ajmc.text_processing.canonical_classes.canonicalword property)": [[13, "ajmc.text_processing.canonical_classes.CanonicalWord.word_range"]]}})